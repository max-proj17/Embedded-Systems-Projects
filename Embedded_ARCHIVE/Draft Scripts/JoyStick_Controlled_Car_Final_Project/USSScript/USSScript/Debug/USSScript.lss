
USSScript.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000009a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000932  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  00800100  00800100  000009a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009bd  00000000  00000000  00000a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000801  00000000  00000000  00001425  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000041b  00000000  00000000  00001c26  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a4  00000000  00000000  00002044  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043a  00000000  00000000  000020e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001a9  00000000  00000000  00002522  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000026cb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
   8:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
   c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  10:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  14:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  18:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  1c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  20:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  24:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  28:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  2c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  30:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  34:	0c 94 d7 00 	jmp	0x1ae	; 0x1ae <__vector_13>
  38:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  3c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  40:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  44:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  48:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  4c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  50:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  54:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  58:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  5c:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  60:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>
  64:	0c 94 c3 00 	jmp	0x186	; 0x186 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <_etext+0x90>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <dtoa_prf+0x252>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <__udivmodsi4+0x8>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <USART_Init+0x2>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <__vector_13+0x20>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_clear_bss>:
 16e:	21 e0       	ldi	r18, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	01 c0       	rjmp	.+2      	; 0x178 <.do_clear_bss_start>

00000176 <.do_clear_bss_loop>:
 176:	1d 92       	st	X+, r1

00000178 <.do_clear_bss_start>:
 178:	a5 30       	cpi	r26, 0x05	; 5
 17a:	b2 07       	cpc	r27, r18
 17c:	e1 f7       	brne	.-8      	; 0x176 <.do_clear_bss_loop>
 17e:	0e 94 62 01 	call	0x2c4	; 0x2c4 <main>
 182:	0c 94 97 04 	jmp	0x92e	; 0x92e <_exit>

00000186 <__bad_interrupt>:
 186:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018a <USART_Init>:
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
	/* Get and return received data from buffer */
	//Dtostrf
	return UDR0;
}
 18a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 18e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 192:	88 e1       	ldi	r24, 0x18	; 24
 194:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 198:	8e e0       	ldi	r24, 0x0E	; 14
 19a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 19e:	08 95       	ret

000001a0 <USART_Transmit>:
 1a0:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 1a4:	95 ff       	sbrs	r25, 5
 1a6:	fc cf       	rjmp	.-8      	; 0x1a0 <USART_Transmit>
 1a8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 1ac:	08 95       	ret

000001ae <__vector_13>:

ISR(TIMER1_OVF_vect) {
 1ae:	1f 92       	push	r1
 1b0:	0f 92       	push	r0
 1b2:	0f b6       	in	r0, 0x3f	; 63
 1b4:	0f 92       	push	r0
 1b6:	11 24       	eor	r1, r1
 1b8:	8f 93       	push	r24
	timerOverflow++;
 1ba:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <timerOverflow>
 1be:	8f 5f       	subi	r24, 0xFF	; 255
 1c0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <timerOverflow>
	USART_Transmit(':');
	USART_Transmit(timerOverflow);
	USART_Transmit(' ');
	USART_Transmit(0x0A);
	*/
}
 1c4:	8f 91       	pop	r24
 1c6:	0f 90       	pop	r0
 1c8:	0f be       	out	0x3f, r0	; 63
 1ca:	0f 90       	pop	r0
 1cc:	1f 90       	pop	r1
 1ce:	18 95       	reti

000001d0 <init_HC_SR04>:

void init_HC_SR04() {
	DDRD |= (1 << TRIG_PIN);   // Set trigger pin as output
 1d0:	8a b1       	in	r24, 0x0a	; 10
 1d2:	84 60       	ori	r24, 0x04	; 4
 1d4:	8a b9       	out	0x0a, r24	; 10
	DDRD &= ~(1 << ECHO_PIN);  // Set echo pin as input
 1d6:	8a b1       	in	r24, 0x0a	; 10
 1d8:	87 7f       	andi	r24, 0xF7	; 247
 1da:	8a b9       	out	0x0a, r24	; 10
	TCCR1B |= (1 << CS10);     // Enable timer with prescaler = 1
 1dc:	e1 e8       	ldi	r30, 0x81	; 129
 1de:	f0 e0       	ldi	r31, 0x00	; 0
 1e0:	80 81       	ld	r24, Z
 1e2:	81 60       	ori	r24, 0x01	; 1
 1e4:	80 83       	st	Z, r24
	TIMSK1 |= (1 << TOIE1);    // Enable timer overflow interrupt
 1e6:	ef e6       	ldi	r30, 0x6F	; 111
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	81 60       	ori	r24, 0x01	; 1
 1ee:	80 83       	st	Z, r24
 1f0:	08 95       	ret

000001f2 <pulseIn>:
}

uint32_t pulseIn() {
	pulseDuration = 0;
 1f2:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
 1f6:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1fa:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 1fe:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	timerOverflow = 0;
 202:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <timerOverflow>
	PORTD &= ~(1 << TRIG_PIN);  // Set trigger pin low
 206:	8b b1       	in	r24, 0x0b	; 11
 208:	8b 7f       	andi	r24, 0xFB	; 251
 20a:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 20c:	00 c0       	rjmp	.+0      	; 0x20e <pulseIn+0x1c>
	_delay_us(2);
	PORTD |= (1 << TRIG_PIN);   // Set trigger pin high for 10 us
 20e:	8b b1       	in	r24, 0x0b	; 11
 210:	84 60       	ori	r24, 0x04	; 4
 212:	8b b9       	out	0x0b, r24	; 11
 214:	83 e0       	ldi	r24, 0x03	; 3
 216:	8a 95       	dec	r24
 218:	f1 f7       	brne	.-4      	; 0x216 <pulseIn+0x24>
 21a:	00 00       	nop
	_delay_us(10);
	PORTD &= ~(1 << TRIG_PIN);  // Set trigger pin low
 21c:	8b b1       	in	r24, 0x0b	; 11
 21e:	8b 7f       	andi	r24, 0xFB	; 251
 220:	8b b9       	out	0x0b, r24	; 11
	while (!(PIND & (1 << ECHO_PIN))) {
 222:	05 c0       	rjmp	.+10     	; 0x22e <pulseIn+0x3c>
		 if(timerOverflow > 1) // Timeout after 100ms
 224:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <timerOverflow>
 228:	82 30       	cpi	r24, 0x02	; 2
 22a:	08 f0       	brcs	.+2      	; 0x22e <pulseIn+0x3c>
 22c:	47 c0       	rjmp	.+142    	; 0x2bc <pulseIn+0xca>
	PORTD &= ~(1 << TRIG_PIN);  // Set trigger pin low
	_delay_us(2);
	PORTD |= (1 << TRIG_PIN);   // Set trigger pin high for 10 us
	_delay_us(10);
	PORTD &= ~(1 << TRIG_PIN);  // Set trigger pin low
	while (!(PIND & (1 << ECHO_PIN))) {
 22e:	4b 9b       	sbis	0x09, 3	; 9
 230:	f9 cf       	rjmp	.-14     	; 0x224 <pulseIn+0x32>
		 if(timerOverflow > 1) // Timeout after 100ms
		 {
			 return 0;
		 }
	}  // Wait for echo pin to go high
	TCNT1 = 0;                  // Reset timer count
 232:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 236:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	TIFR1 |= (1 << TOV1);       // Clear timer overflow flag
 23a:	86 b3       	in	r24, 0x16	; 22
 23c:	81 60       	ori	r24, 0x01	; 1
 23e:	86 bb       	out	0x16, r24	; 22
	TIMSK1 |= (1 << TOIE1);     // Enable timer overflow interrupt
 240:	ef e6       	ldi	r30, 0x6F	; 111
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	80 81       	ld	r24, Z
 246:	81 60       	ori	r24, 0x01	; 1
 248:	80 83       	st	Z, r24
	sei();                      // Enable global interrupts
 24a:	78 94       	sei
	while ((PIND & (1 << ECHO_PIN))) {  // Wait for echo pin to go low
 24c:	0e c0       	rjmp	.+28     	; 0x26a <pulseIn+0x78>
		if (timerOverflow > 1) {    // If no echo, exit loop after timeout
 24e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <timerOverflow>
 252:	82 30       	cpi	r24, 0x02	; 2
 254:	50 f0       	brcs	.+20     	; 0x26a <pulseIn+0x78>
			TIMSK1 &= ~(1 << TOIE1);  // Disable timer overflow interrupt
 256:	ef e6       	ldi	r30, 0x6F	; 111
 258:	f0 e0       	ldi	r31, 0x00	; 0
 25a:	80 81       	ld	r24, Z
 25c:	8e 7f       	andi	r24, 0xFE	; 254
 25e:	80 83       	st	Z, r24
			cli();    // Disable global interrupts
 260:	f8 94       	cli
			return 0;
 262:	60 e0       	ldi	r22, 0x00	; 0
 264:	70 e0       	ldi	r23, 0x00	; 0
 266:	cb 01       	movw	r24, r22
 268:	08 95       	ret
	}  // Wait for echo pin to go high
	TCNT1 = 0;                  // Reset timer count
	TIFR1 |= (1 << TOV1);       // Clear timer overflow flag
	TIMSK1 |= (1 << TOIE1);     // Enable timer overflow interrupt
	sei();                      // Enable global interrupts
	while ((PIND & (1 << ECHO_PIN))) {  // Wait for echo pin to go low
 26a:	4b 99       	sbic	0x09, 3	; 9
 26c:	f0 cf       	rjmp	.-32     	; 0x24e <pulseIn+0x5c>
			TIMSK1 &= ~(1 << TOIE1);  // Disable timer overflow interrupt
			cli();    // Disable global interrupts
			return 0;
		}
	}
	TIMSK1 &= ~(1 << TOIE1);    // Disable timer overflow interrupt
 26e:	ef e6       	ldi	r30, 0x6F	; 111
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	80 81       	ld	r24, Z
 274:	8e 7f       	andi	r24, 0xFE	; 254
 276:	80 83       	st	Z, r24
	cli();    // Disable global interrupts
 278:	f8 94       	cli
	pulseDuration = timerOverflow * 65536UL + TCNT1;
 27a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <timerOverflow>
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	a0 e0       	ldi	r26, 0x00	; 0
 282:	b0 e0       	ldi	r27, 0x00	; 0
 284:	dc 01       	movw	r26, r24
 286:	99 27       	eor	r25, r25
 288:	88 27       	eor	r24, r24
 28a:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 28e:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 292:	82 0f       	add	r24, r18
 294:	93 1f       	adc	r25, r19
 296:	a1 1d       	adc	r26, r1
 298:	b1 1d       	adc	r27, r1
 29a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 29e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2a2:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 2a6:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
	return pulseDuration;
 2aa:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2ae:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2b2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 2b6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 2ba:	08 95       	ret
	_delay_us(10);
	PORTD &= ~(1 << TRIG_PIN);  // Set trigger pin low
	while (!(PIND & (1 << ECHO_PIN))) {
		 if(timerOverflow > 1) // Timeout after 100ms
		 {
			 return 0;
 2bc:	60 e0       	ldi	r22, 0x00	; 0
 2be:	70 e0       	ldi	r23, 0x00	; 0
 2c0:	cb 01       	movw	r24, r22
	}
	TIMSK1 &= ~(1 << TOIE1);    // Disable timer overflow interrupt
	cli();    // Disable global interrupts
	pulseDuration = timerOverflow * 65536UL + TCNT1;
	return pulseDuration;
}
 2c2:	08 95       	ret

000002c4 <main>:

int main(void)
{
 2c4:	cf 93       	push	r28
 2c6:	df 93       	push	r29
 2c8:	cd b7       	in	r28, 0x3d	; 61
 2ca:	de b7       	in	r29, 0x3e	; 62
 2cc:	2b 97       	sbiw	r28, 0x0b	; 11
 2ce:	0f b6       	in	r0, 0x3f	; 63
 2d0:	f8 94       	cli
 2d2:	de bf       	out	0x3e, r29	; 62
 2d4:	0f be       	out	0x3f, r0	; 63
 2d6:	cd bf       	out	0x3d, r28	; 61
	//ADC_Init();
	USART_Init(MYUBRR);
 2d8:	87 e6       	ldi	r24, 0x67	; 103
 2da:	90 e0       	ldi	r25, 0x00	; 0
 2dc:	0e 94 c5 00 	call	0x18a	; 0x18a <USART_Init>
	init_HC_SR04();
 2e0:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <init_HC_SR04>
	
	while (1) {
		uint32_t pulseDuration = pulseIn();
 2e4:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <pulseIn>
		uint32_t distance = pulseDuration/58/13; //70.6; // Calculate distance in centimeters
 2e8:	22 ef       	ldi	r18, 0xF2	; 242
 2ea:	32 e0       	ldi	r19, 0x02	; 2
 2ec:	40 e0       	ldi	r20, 0x00	; 0
 2ee:	50 e0       	ldi	r21, 0x00	; 0
 2f0:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <__udivmodsi4>
			distance = 0;
		}
		*/
		char str[11];  // Maximum digits in a 32-bit unsigned integer is 10 (plus null terminator)
		//sprintf(str, "%lu", distance);  // Convert integer to string
		dtostrf(distance,4,2,str);
 2f4:	ca 01       	movw	r24, r20
 2f6:	b9 01       	movw	r22, r18
 2f8:	0e 94 af 01 	call	0x35e	; 0x35e <__floatunsisf>
 2fc:	8e 01       	movw	r16, r28
 2fe:	0f 5f       	subi	r16, 0xFF	; 255
 300:	1f 4f       	sbci	r17, 0xFF	; 255
 302:	22 e0       	ldi	r18, 0x02	; 2
 304:	44 e0       	ldi	r20, 0x04	; 4
 306:	0e 94 0e 02 	call	0x41c	; 0x41c <dtostrf>
		for (int i = 0; i < strlen(str); i++) {  // Transmit string character by character
 30a:	00 e0       	ldi	r16, 0x00	; 0
 30c:	10 e0       	ldi	r17, 0x00	; 0
 30e:	0b c0       	rjmp	.+22     	; 0x326 <main+0x62>
			USART_Transmit(str[i]);
 310:	e1 e0       	ldi	r30, 0x01	; 1
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	ec 0f       	add	r30, r28
 316:	fd 1f       	adc	r31, r29
 318:	e0 0f       	add	r30, r16
 31a:	f1 1f       	adc	r31, r17
 31c:	80 81       	ld	r24, Z
 31e:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <USART_Transmit>
		}
		*/
		char str[11];  // Maximum digits in a 32-bit unsigned integer is 10 (plus null terminator)
		//sprintf(str, "%lu", distance);  // Convert integer to string
		dtostrf(distance,4,2,str);
		for (int i = 0; i < strlen(str); i++) {  // Transmit string character by character
 322:	0f 5f       	subi	r16, 0xFF	; 255
 324:	1f 4f       	sbci	r17, 0xFF	; 255
 326:	de 01       	movw	r26, r28
 328:	11 96       	adiw	r26, 0x01	; 1
 32a:	fd 01       	movw	r30, r26
 32c:	01 90       	ld	r0, Z+
 32e:	00 20       	and	r0, r0
 330:	e9 f7       	brne	.-6      	; 0x32c <main+0x68>
 332:	31 97       	sbiw	r30, 0x01	; 1
 334:	ea 1b       	sub	r30, r26
 336:	fb 0b       	sbc	r31, r27
 338:	0e 17       	cp	r16, r30
 33a:	1f 07       	cpc	r17, r31
 33c:	48 f3       	brcs	.-46     	; 0x310 <main+0x4c>
			USART_Transmit(str[i]);
		}
		USART_Transmit(' ');
 33e:	80 e2       	ldi	r24, 0x20	; 32
 340:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <USART_Transmit>
		USART_Transmit(0x0A);
 344:	8a e0       	ldi	r24, 0x0A	; 10
 346:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <USART_Transmit>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 34a:	2f e9       	ldi	r18, 0x9F	; 159
 34c:	86 e8       	ldi	r24, 0x86	; 134
 34e:	91 e0       	ldi	r25, 0x01	; 1
 350:	21 50       	subi	r18, 0x01	; 1
 352:	80 40       	sbci	r24, 0x00	; 0
 354:	90 40       	sbci	r25, 0x00	; 0
 356:	e1 f7       	brne	.-8      	; 0x350 <main+0x8c>
 358:	00 c0       	rjmp	.+0      	; 0x35a <main+0x96>
 35a:	00 00       	nop
		_delay_ms(500);   // Delay between measurements
	}
 35c:	c3 cf       	rjmp	.-122    	; 0x2e4 <main+0x20>

0000035e <__floatunsisf>:
 35e:	e8 94       	clt
 360:	09 c0       	rjmp	.+18     	; 0x374 <__floatsisf+0x12>

00000362 <__floatsisf>:
 362:	97 fb       	bst	r25, 7
 364:	3e f4       	brtc	.+14     	; 0x374 <__floatsisf+0x12>
 366:	90 95       	com	r25
 368:	80 95       	com	r24
 36a:	70 95       	com	r23
 36c:	61 95       	neg	r22
 36e:	7f 4f       	sbci	r23, 0xFF	; 255
 370:	8f 4f       	sbci	r24, 0xFF	; 255
 372:	9f 4f       	sbci	r25, 0xFF	; 255
 374:	99 23       	and	r25, r25
 376:	a9 f0       	breq	.+42     	; 0x3a2 <__floatsisf+0x40>
 378:	f9 2f       	mov	r31, r25
 37a:	96 e9       	ldi	r25, 0x96	; 150
 37c:	bb 27       	eor	r27, r27
 37e:	93 95       	inc	r25
 380:	f6 95       	lsr	r31
 382:	87 95       	ror	r24
 384:	77 95       	ror	r23
 386:	67 95       	ror	r22
 388:	b7 95       	ror	r27
 38a:	f1 11       	cpse	r31, r1
 38c:	f8 cf       	rjmp	.-16     	; 0x37e <__floatsisf+0x1c>
 38e:	fa f4       	brpl	.+62     	; 0x3ce <__floatsisf+0x6c>
 390:	bb 0f       	add	r27, r27
 392:	11 f4       	brne	.+4      	; 0x398 <__floatsisf+0x36>
 394:	60 ff       	sbrs	r22, 0
 396:	1b c0       	rjmp	.+54     	; 0x3ce <__floatsisf+0x6c>
 398:	6f 5f       	subi	r22, 0xFF	; 255
 39a:	7f 4f       	sbci	r23, 0xFF	; 255
 39c:	8f 4f       	sbci	r24, 0xFF	; 255
 39e:	9f 4f       	sbci	r25, 0xFF	; 255
 3a0:	16 c0       	rjmp	.+44     	; 0x3ce <__floatsisf+0x6c>
 3a2:	88 23       	and	r24, r24
 3a4:	11 f0       	breq	.+4      	; 0x3aa <__floatsisf+0x48>
 3a6:	96 e9       	ldi	r25, 0x96	; 150
 3a8:	11 c0       	rjmp	.+34     	; 0x3cc <__floatsisf+0x6a>
 3aa:	77 23       	and	r23, r23
 3ac:	21 f0       	breq	.+8      	; 0x3b6 <__floatsisf+0x54>
 3ae:	9e e8       	ldi	r25, 0x8E	; 142
 3b0:	87 2f       	mov	r24, r23
 3b2:	76 2f       	mov	r23, r22
 3b4:	05 c0       	rjmp	.+10     	; 0x3c0 <__floatsisf+0x5e>
 3b6:	66 23       	and	r22, r22
 3b8:	71 f0       	breq	.+28     	; 0x3d6 <__floatsisf+0x74>
 3ba:	96 e8       	ldi	r25, 0x86	; 134
 3bc:	86 2f       	mov	r24, r22
 3be:	70 e0       	ldi	r23, 0x00	; 0
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	2a f0       	brmi	.+10     	; 0x3ce <__floatsisf+0x6c>
 3c4:	9a 95       	dec	r25
 3c6:	66 0f       	add	r22, r22
 3c8:	77 1f       	adc	r23, r23
 3ca:	88 1f       	adc	r24, r24
 3cc:	da f7       	brpl	.-10     	; 0x3c4 <__floatsisf+0x62>
 3ce:	88 0f       	add	r24, r24
 3d0:	96 95       	lsr	r25
 3d2:	87 95       	ror	r24
 3d4:	97 f9       	bld	r25, 7
 3d6:	08 95       	ret

000003d8 <__udivmodsi4>:
 3d8:	a1 e2       	ldi	r26, 0x21	; 33
 3da:	1a 2e       	mov	r1, r26
 3dc:	aa 1b       	sub	r26, r26
 3de:	bb 1b       	sub	r27, r27
 3e0:	fd 01       	movw	r30, r26
 3e2:	0d c0       	rjmp	.+26     	; 0x3fe <__udivmodsi4_ep>

000003e4 <__udivmodsi4_loop>:
 3e4:	aa 1f       	adc	r26, r26
 3e6:	bb 1f       	adc	r27, r27
 3e8:	ee 1f       	adc	r30, r30
 3ea:	ff 1f       	adc	r31, r31
 3ec:	a2 17       	cp	r26, r18
 3ee:	b3 07       	cpc	r27, r19
 3f0:	e4 07       	cpc	r30, r20
 3f2:	f5 07       	cpc	r31, r21
 3f4:	20 f0       	brcs	.+8      	; 0x3fe <__udivmodsi4_ep>
 3f6:	a2 1b       	sub	r26, r18
 3f8:	b3 0b       	sbc	r27, r19
 3fa:	e4 0b       	sbc	r30, r20
 3fc:	f5 0b       	sbc	r31, r21

000003fe <__udivmodsi4_ep>:
 3fe:	66 1f       	adc	r22, r22
 400:	77 1f       	adc	r23, r23
 402:	88 1f       	adc	r24, r24
 404:	99 1f       	adc	r25, r25
 406:	1a 94       	dec	r1
 408:	69 f7       	brne	.-38     	; 0x3e4 <__udivmodsi4_loop>
 40a:	60 95       	com	r22
 40c:	70 95       	com	r23
 40e:	80 95       	com	r24
 410:	90 95       	com	r25
 412:	9b 01       	movw	r18, r22
 414:	ac 01       	movw	r20, r24
 416:	bd 01       	movw	r22, r26
 418:	cf 01       	movw	r24, r30
 41a:	08 95       	ret

0000041c <dtostrf>:
 41c:	ef 92       	push	r14
 41e:	0f 93       	push	r16
 420:	1f 93       	push	r17
 422:	cf 93       	push	r28
 424:	df 93       	push	r29
 426:	e8 01       	movw	r28, r16
 428:	47 fd       	sbrc	r20, 7
 42a:	02 c0       	rjmp	.+4      	; 0x430 <dtostrf+0x14>
 42c:	34 e0       	ldi	r19, 0x04	; 4
 42e:	01 c0       	rjmp	.+2      	; 0x432 <dtostrf+0x16>
 430:	34 e1       	ldi	r19, 0x14	; 20
 432:	04 2e       	mov	r0, r20
 434:	00 0c       	add	r0, r0
 436:	55 0b       	sbc	r21, r21
 438:	57 ff       	sbrs	r21, 7
 43a:	03 c0       	rjmp	.+6      	; 0x442 <dtostrf+0x26>
 43c:	51 95       	neg	r21
 43e:	41 95       	neg	r20
 440:	51 09       	sbc	r21, r1
 442:	e3 2e       	mov	r14, r19
 444:	02 2f       	mov	r16, r18
 446:	24 2f       	mov	r18, r20
 448:	ae 01       	movw	r20, r28
 44a:	0e 94 2e 02 	call	0x45c	; 0x45c <dtoa_prf>
 44e:	ce 01       	movw	r24, r28
 450:	df 91       	pop	r29
 452:	cf 91       	pop	r28
 454:	1f 91       	pop	r17
 456:	0f 91       	pop	r16
 458:	ef 90       	pop	r14
 45a:	08 95       	ret

0000045c <dtoa_prf>:
 45c:	a9 e0       	ldi	r26, 0x09	; 9
 45e:	b0 e0       	ldi	r27, 0x00	; 0
 460:	e4 e3       	ldi	r30, 0x34	; 52
 462:	f2 e0       	ldi	r31, 0x02	; 2
 464:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <__prologue_saves__+0xc>
 468:	6a 01       	movw	r12, r20
 46a:	12 2f       	mov	r17, r18
 46c:	b0 2e       	mov	r11, r16
 46e:	2b e3       	ldi	r18, 0x3B	; 59
 470:	20 17       	cp	r18, r16
 472:	20 f0       	brcs	.+8      	; 0x47c <dtoa_prf+0x20>
 474:	ff 24       	eor	r15, r15
 476:	f3 94       	inc	r15
 478:	f0 0e       	add	r15, r16
 47a:	02 c0       	rjmp	.+4      	; 0x480 <dtoa_prf+0x24>
 47c:	2c e3       	ldi	r18, 0x3C	; 60
 47e:	f2 2e       	mov	r15, r18
 480:	0f 2d       	mov	r16, r15
 482:	27 e0       	ldi	r18, 0x07	; 7
 484:	ae 01       	movw	r20, r28
 486:	4f 5f       	subi	r20, 0xFF	; 255
 488:	5f 4f       	sbci	r21, 0xFF	; 255
 48a:	0e 94 88 03 	call	0x710	; 0x710 <__ftoa_engine>
 48e:	bc 01       	movw	r22, r24
 490:	49 81       	ldd	r20, Y+1	; 0x01
 492:	84 2f       	mov	r24, r20
 494:	89 70       	andi	r24, 0x09	; 9
 496:	81 30       	cpi	r24, 0x01	; 1
 498:	31 f0       	breq	.+12     	; 0x4a6 <dtoa_prf+0x4a>
 49a:	e1 fc       	sbrc	r14, 1
 49c:	06 c0       	rjmp	.+12     	; 0x4aa <dtoa_prf+0x4e>
 49e:	e0 fe       	sbrs	r14, 0
 4a0:	06 c0       	rjmp	.+12     	; 0x4ae <dtoa_prf+0x52>
 4a2:	90 e2       	ldi	r25, 0x20	; 32
 4a4:	05 c0       	rjmp	.+10     	; 0x4b0 <dtoa_prf+0x54>
 4a6:	9d e2       	ldi	r25, 0x2D	; 45
 4a8:	03 c0       	rjmp	.+6      	; 0x4b0 <dtoa_prf+0x54>
 4aa:	9b e2       	ldi	r25, 0x2B	; 43
 4ac:	01 c0       	rjmp	.+2      	; 0x4b0 <dtoa_prf+0x54>
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	5e 2d       	mov	r21, r14
 4b2:	50 71       	andi	r21, 0x10	; 16
 4b4:	43 ff       	sbrs	r20, 3
 4b6:	3c c0       	rjmp	.+120    	; 0x530 <dtoa_prf+0xd4>
 4b8:	91 11       	cpse	r25, r1
 4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <dtoa_prf+0x64>
 4bc:	83 e0       	ldi	r24, 0x03	; 3
 4be:	01 c0       	rjmp	.+2      	; 0x4c2 <dtoa_prf+0x66>
 4c0:	84 e0       	ldi	r24, 0x04	; 4
 4c2:	81 17       	cp	r24, r17
 4c4:	18 f4       	brcc	.+6      	; 0x4cc <dtoa_prf+0x70>
 4c6:	21 2f       	mov	r18, r17
 4c8:	28 1b       	sub	r18, r24
 4ca:	01 c0       	rjmp	.+2      	; 0x4ce <dtoa_prf+0x72>
 4cc:	20 e0       	ldi	r18, 0x00	; 0
 4ce:	51 11       	cpse	r21, r1
 4d0:	0b c0       	rjmp	.+22     	; 0x4e8 <dtoa_prf+0x8c>
 4d2:	f6 01       	movw	r30, r12
 4d4:	82 2f       	mov	r24, r18
 4d6:	30 e2       	ldi	r19, 0x20	; 32
 4d8:	88 23       	and	r24, r24
 4da:	19 f0       	breq	.+6      	; 0x4e2 <dtoa_prf+0x86>
 4dc:	31 93       	st	Z+, r19
 4de:	81 50       	subi	r24, 0x01	; 1
 4e0:	fb cf       	rjmp	.-10     	; 0x4d8 <dtoa_prf+0x7c>
 4e2:	c2 0e       	add	r12, r18
 4e4:	d1 1c       	adc	r13, r1
 4e6:	20 e0       	ldi	r18, 0x00	; 0
 4e8:	99 23       	and	r25, r25
 4ea:	29 f0       	breq	.+10     	; 0x4f6 <dtoa_prf+0x9a>
 4ec:	d6 01       	movw	r26, r12
 4ee:	9c 93       	st	X, r25
 4f0:	f6 01       	movw	r30, r12
 4f2:	31 96       	adiw	r30, 0x01	; 1
 4f4:	6f 01       	movw	r12, r30
 4f6:	c6 01       	movw	r24, r12
 4f8:	03 96       	adiw	r24, 0x03	; 3
 4fa:	e2 fe       	sbrs	r14, 2
 4fc:	0a c0       	rjmp	.+20     	; 0x512 <dtoa_prf+0xb6>
 4fe:	3e e4       	ldi	r19, 0x4E	; 78
 500:	d6 01       	movw	r26, r12
 502:	3c 93       	st	X, r19
 504:	41 e4       	ldi	r20, 0x41	; 65
 506:	11 96       	adiw	r26, 0x01	; 1
 508:	4c 93       	st	X, r20
 50a:	11 97       	sbiw	r26, 0x01	; 1
 50c:	12 96       	adiw	r26, 0x02	; 2
 50e:	3c 93       	st	X, r19
 510:	06 c0       	rjmp	.+12     	; 0x51e <dtoa_prf+0xc2>
 512:	3e e6       	ldi	r19, 0x6E	; 110
 514:	f6 01       	movw	r30, r12
 516:	30 83       	st	Z, r19
 518:	41 e6       	ldi	r20, 0x61	; 97
 51a:	41 83       	std	Z+1, r20	; 0x01
 51c:	32 83       	std	Z+2, r19	; 0x02
 51e:	fc 01       	movw	r30, r24
 520:	32 2f       	mov	r19, r18
 522:	40 e2       	ldi	r20, 0x20	; 32
 524:	33 23       	and	r19, r19
 526:	09 f4       	brne	.+2      	; 0x52a <dtoa_prf+0xce>
 528:	42 c0       	rjmp	.+132    	; 0x5ae <dtoa_prf+0x152>
 52a:	41 93       	st	Z+, r20
 52c:	31 50       	subi	r19, 0x01	; 1
 52e:	fa cf       	rjmp	.-12     	; 0x524 <dtoa_prf+0xc8>
 530:	42 ff       	sbrs	r20, 2
 532:	44 c0       	rjmp	.+136    	; 0x5bc <dtoa_prf+0x160>
 534:	91 11       	cpse	r25, r1
 536:	02 c0       	rjmp	.+4      	; 0x53c <dtoa_prf+0xe0>
 538:	83 e0       	ldi	r24, 0x03	; 3
 53a:	01 c0       	rjmp	.+2      	; 0x53e <dtoa_prf+0xe2>
 53c:	84 e0       	ldi	r24, 0x04	; 4
 53e:	81 17       	cp	r24, r17
 540:	18 f4       	brcc	.+6      	; 0x548 <dtoa_prf+0xec>
 542:	21 2f       	mov	r18, r17
 544:	28 1b       	sub	r18, r24
 546:	01 c0       	rjmp	.+2      	; 0x54a <dtoa_prf+0xee>
 548:	20 e0       	ldi	r18, 0x00	; 0
 54a:	51 11       	cpse	r21, r1
 54c:	0b c0       	rjmp	.+22     	; 0x564 <dtoa_prf+0x108>
 54e:	f6 01       	movw	r30, r12
 550:	82 2f       	mov	r24, r18
 552:	30 e2       	ldi	r19, 0x20	; 32
 554:	88 23       	and	r24, r24
 556:	19 f0       	breq	.+6      	; 0x55e <dtoa_prf+0x102>
 558:	31 93       	st	Z+, r19
 55a:	81 50       	subi	r24, 0x01	; 1
 55c:	fb cf       	rjmp	.-10     	; 0x554 <dtoa_prf+0xf8>
 55e:	c2 0e       	add	r12, r18
 560:	d1 1c       	adc	r13, r1
 562:	20 e0       	ldi	r18, 0x00	; 0
 564:	99 23       	and	r25, r25
 566:	29 f0       	breq	.+10     	; 0x572 <dtoa_prf+0x116>
 568:	d6 01       	movw	r26, r12
 56a:	9c 93       	st	X, r25
 56c:	f6 01       	movw	r30, r12
 56e:	31 96       	adiw	r30, 0x01	; 1
 570:	6f 01       	movw	r12, r30
 572:	c6 01       	movw	r24, r12
 574:	03 96       	adiw	r24, 0x03	; 3
 576:	e2 fe       	sbrs	r14, 2
 578:	0b c0       	rjmp	.+22     	; 0x590 <dtoa_prf+0x134>
 57a:	39 e4       	ldi	r19, 0x49	; 73
 57c:	d6 01       	movw	r26, r12
 57e:	3c 93       	st	X, r19
 580:	3e e4       	ldi	r19, 0x4E	; 78
 582:	11 96       	adiw	r26, 0x01	; 1
 584:	3c 93       	st	X, r19
 586:	11 97       	sbiw	r26, 0x01	; 1
 588:	36 e4       	ldi	r19, 0x46	; 70
 58a:	12 96       	adiw	r26, 0x02	; 2
 58c:	3c 93       	st	X, r19
 58e:	07 c0       	rjmp	.+14     	; 0x59e <dtoa_prf+0x142>
 590:	39 e6       	ldi	r19, 0x69	; 105
 592:	f6 01       	movw	r30, r12
 594:	30 83       	st	Z, r19
 596:	3e e6       	ldi	r19, 0x6E	; 110
 598:	31 83       	std	Z+1, r19	; 0x01
 59a:	36 e6       	ldi	r19, 0x66	; 102
 59c:	32 83       	std	Z+2, r19	; 0x02
 59e:	fc 01       	movw	r30, r24
 5a0:	32 2f       	mov	r19, r18
 5a2:	40 e2       	ldi	r20, 0x20	; 32
 5a4:	33 23       	and	r19, r19
 5a6:	19 f0       	breq	.+6      	; 0x5ae <dtoa_prf+0x152>
 5a8:	41 93       	st	Z+, r20
 5aa:	31 50       	subi	r19, 0x01	; 1
 5ac:	fb cf       	rjmp	.-10     	; 0x5a4 <dtoa_prf+0x148>
 5ae:	fc 01       	movw	r30, r24
 5b0:	e2 0f       	add	r30, r18
 5b2:	f1 1d       	adc	r31, r1
 5b4:	10 82       	st	Z, r1
 5b6:	8e ef       	ldi	r24, 0xFE	; 254
 5b8:	9f ef       	ldi	r25, 0xFF	; 255
 5ba:	a6 c0       	rjmp	.+332    	; 0x708 <dtoa_prf+0x2ac>
 5bc:	21 e0       	ldi	r18, 0x01	; 1
 5be:	30 e0       	ldi	r19, 0x00	; 0
 5c0:	91 11       	cpse	r25, r1
 5c2:	02 c0       	rjmp	.+4      	; 0x5c8 <dtoa_prf+0x16c>
 5c4:	20 e0       	ldi	r18, 0x00	; 0
 5c6:	30 e0       	ldi	r19, 0x00	; 0
 5c8:	16 16       	cp	r1, r22
 5ca:	17 06       	cpc	r1, r23
 5cc:	1c f4       	brge	.+6      	; 0x5d4 <dtoa_prf+0x178>
 5ce:	fb 01       	movw	r30, r22
 5d0:	31 96       	adiw	r30, 0x01	; 1
 5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <dtoa_prf+0x17c>
 5d4:	e1 e0       	ldi	r30, 0x01	; 1
 5d6:	f0 e0       	ldi	r31, 0x00	; 0
 5d8:	2e 0f       	add	r18, r30
 5da:	3f 1f       	adc	r19, r31
 5dc:	bb 20       	and	r11, r11
 5de:	21 f0       	breq	.+8      	; 0x5e8 <dtoa_prf+0x18c>
 5e0:	eb 2d       	mov	r30, r11
 5e2:	f0 e0       	ldi	r31, 0x00	; 0
 5e4:	31 96       	adiw	r30, 0x01	; 1
 5e6:	02 c0       	rjmp	.+4      	; 0x5ec <dtoa_prf+0x190>
 5e8:	e0 e0       	ldi	r30, 0x00	; 0
 5ea:	f0 e0       	ldi	r31, 0x00	; 0
 5ec:	2e 0f       	add	r18, r30
 5ee:	3f 1f       	adc	r19, r31
 5f0:	e1 2f       	mov	r30, r17
 5f2:	f0 e0       	ldi	r31, 0x00	; 0
 5f4:	2e 17       	cp	r18, r30
 5f6:	3f 07       	cpc	r19, r31
 5f8:	1c f4       	brge	.+6      	; 0x600 <dtoa_prf+0x1a4>
 5fa:	12 1b       	sub	r17, r18
 5fc:	21 2f       	mov	r18, r17
 5fe:	01 c0       	rjmp	.+2      	; 0x602 <dtoa_prf+0x1a6>
 600:	20 e0       	ldi	r18, 0x00	; 0
 602:	8e 2d       	mov	r24, r14
 604:	88 71       	andi	r24, 0x18	; 24
 606:	59 f4       	brne	.+22     	; 0x61e <dtoa_prf+0x1c2>
 608:	f6 01       	movw	r30, r12
 60a:	82 2f       	mov	r24, r18
 60c:	30 e2       	ldi	r19, 0x20	; 32
 60e:	88 23       	and	r24, r24
 610:	19 f0       	breq	.+6      	; 0x618 <dtoa_prf+0x1bc>
 612:	31 93       	st	Z+, r19
 614:	81 50       	subi	r24, 0x01	; 1
 616:	fb cf       	rjmp	.-10     	; 0x60e <dtoa_prf+0x1b2>
 618:	c2 0e       	add	r12, r18
 61a:	d1 1c       	adc	r13, r1
 61c:	20 e0       	ldi	r18, 0x00	; 0
 61e:	99 23       	and	r25, r25
 620:	29 f0       	breq	.+10     	; 0x62c <dtoa_prf+0x1d0>
 622:	d6 01       	movw	r26, r12
 624:	9c 93       	st	X, r25
 626:	f6 01       	movw	r30, r12
 628:	31 96       	adiw	r30, 0x01	; 1
 62a:	6f 01       	movw	r12, r30
 62c:	51 11       	cpse	r21, r1
 62e:	0b c0       	rjmp	.+22     	; 0x646 <dtoa_prf+0x1ea>
 630:	f6 01       	movw	r30, r12
 632:	82 2f       	mov	r24, r18
 634:	90 e3       	ldi	r25, 0x30	; 48
 636:	88 23       	and	r24, r24
 638:	19 f0       	breq	.+6      	; 0x640 <dtoa_prf+0x1e4>
 63a:	91 93       	st	Z+, r25
 63c:	81 50       	subi	r24, 0x01	; 1
 63e:	fb cf       	rjmp	.-10     	; 0x636 <dtoa_prf+0x1da>
 640:	c2 0e       	add	r12, r18
 642:	d1 1c       	adc	r13, r1
 644:	20 e0       	ldi	r18, 0x00	; 0
 646:	0f 2d       	mov	r16, r15
 648:	06 0f       	add	r16, r22
 64a:	9a 81       	ldd	r25, Y+2	; 0x02
 64c:	34 2f       	mov	r19, r20
 64e:	30 71       	andi	r19, 0x10	; 16
 650:	44 ff       	sbrs	r20, 4
 652:	03 c0       	rjmp	.+6      	; 0x65a <dtoa_prf+0x1fe>
 654:	91 33       	cpi	r25, 0x31	; 49
 656:	09 f4       	brne	.+2      	; 0x65a <dtoa_prf+0x1fe>
 658:	01 50       	subi	r16, 0x01	; 1
 65a:	10 16       	cp	r1, r16
 65c:	24 f4       	brge	.+8      	; 0x666 <dtoa_prf+0x20a>
 65e:	09 30       	cpi	r16, 0x09	; 9
 660:	18 f0       	brcs	.+6      	; 0x668 <dtoa_prf+0x20c>
 662:	08 e0       	ldi	r16, 0x08	; 8
 664:	01 c0       	rjmp	.+2      	; 0x668 <dtoa_prf+0x20c>
 666:	01 e0       	ldi	r16, 0x01	; 1
 668:	ab 01       	movw	r20, r22
 66a:	77 ff       	sbrs	r23, 7
 66c:	02 c0       	rjmp	.+4      	; 0x672 <dtoa_prf+0x216>
 66e:	40 e0       	ldi	r20, 0x00	; 0
 670:	50 e0       	ldi	r21, 0x00	; 0
 672:	fb 01       	movw	r30, r22
 674:	e4 1b       	sub	r30, r20
 676:	f5 0b       	sbc	r31, r21
 678:	a1 e0       	ldi	r26, 0x01	; 1
 67a:	b0 e0       	ldi	r27, 0x00	; 0
 67c:	ac 0f       	add	r26, r28
 67e:	bd 1f       	adc	r27, r29
 680:	ea 0f       	add	r30, r26
 682:	fb 1f       	adc	r31, r27
 684:	8e e2       	ldi	r24, 0x2E	; 46
 686:	a8 2e       	mov	r10, r24
 688:	4b 01       	movw	r8, r22
 68a:	80 1a       	sub	r8, r16
 68c:	91 08       	sbc	r9, r1
 68e:	0b 2d       	mov	r16, r11
 690:	10 e0       	ldi	r17, 0x00	; 0
 692:	11 95       	neg	r17
 694:	01 95       	neg	r16
 696:	11 09       	sbc	r17, r1
 698:	4f 3f       	cpi	r20, 0xFF	; 255
 69a:	bf ef       	ldi	r27, 0xFF	; 255
 69c:	5b 07       	cpc	r21, r27
 69e:	21 f4       	brne	.+8      	; 0x6a8 <dtoa_prf+0x24c>
 6a0:	d6 01       	movw	r26, r12
 6a2:	ac 92       	st	X, r10
 6a4:	11 96       	adiw	r26, 0x01	; 1
 6a6:	6d 01       	movw	r12, r26
 6a8:	64 17       	cp	r22, r20
 6aa:	75 07       	cpc	r23, r21
 6ac:	2c f0       	brlt	.+10     	; 0x6b8 <dtoa_prf+0x25c>
 6ae:	84 16       	cp	r8, r20
 6b0:	95 06       	cpc	r9, r21
 6b2:	14 f4       	brge	.+4      	; 0x6b8 <dtoa_prf+0x25c>
 6b4:	81 81       	ldd	r24, Z+1	; 0x01
 6b6:	01 c0       	rjmp	.+2      	; 0x6ba <dtoa_prf+0x25e>
 6b8:	80 e3       	ldi	r24, 0x30	; 48
 6ba:	41 50       	subi	r20, 0x01	; 1
 6bc:	51 09       	sbc	r21, r1
 6be:	31 96       	adiw	r30, 0x01	; 1
 6c0:	d6 01       	movw	r26, r12
 6c2:	11 96       	adiw	r26, 0x01	; 1
 6c4:	7d 01       	movw	r14, r26
 6c6:	40 17       	cp	r20, r16
 6c8:	51 07       	cpc	r21, r17
 6ca:	24 f0       	brlt	.+8      	; 0x6d4 <dtoa_prf+0x278>
 6cc:	d6 01       	movw	r26, r12
 6ce:	8c 93       	st	X, r24
 6d0:	67 01       	movw	r12, r14
 6d2:	e2 cf       	rjmp	.-60     	; 0x698 <dtoa_prf+0x23c>
 6d4:	64 17       	cp	r22, r20
 6d6:	75 07       	cpc	r23, r21
 6d8:	39 f4       	brne	.+14     	; 0x6e8 <dtoa_prf+0x28c>
 6da:	96 33       	cpi	r25, 0x36	; 54
 6dc:	20 f4       	brcc	.+8      	; 0x6e6 <dtoa_prf+0x28a>
 6de:	95 33       	cpi	r25, 0x35	; 53
 6e0:	19 f4       	brne	.+6      	; 0x6e8 <dtoa_prf+0x28c>
 6e2:	31 11       	cpse	r19, r1
 6e4:	01 c0       	rjmp	.+2      	; 0x6e8 <dtoa_prf+0x28c>
 6e6:	81 e3       	ldi	r24, 0x31	; 49
 6e8:	f6 01       	movw	r30, r12
 6ea:	80 83       	st	Z, r24
 6ec:	f7 01       	movw	r30, r14
 6ee:	82 2f       	mov	r24, r18
 6f0:	90 e2       	ldi	r25, 0x20	; 32
 6f2:	88 23       	and	r24, r24
 6f4:	19 f0       	breq	.+6      	; 0x6fc <dtoa_prf+0x2a0>
 6f6:	91 93       	st	Z+, r25
 6f8:	81 50       	subi	r24, 0x01	; 1
 6fa:	fb cf       	rjmp	.-10     	; 0x6f2 <dtoa_prf+0x296>
 6fc:	f7 01       	movw	r30, r14
 6fe:	e2 0f       	add	r30, r18
 700:	f1 1d       	adc	r31, r1
 702:	10 82       	st	Z, r1
 704:	80 e0       	ldi	r24, 0x00	; 0
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	29 96       	adiw	r28, 0x09	; 9
 70a:	ec e0       	ldi	r30, 0x0C	; 12
 70c:	0c 94 82 04 	jmp	0x904	; 0x904 <__stack+0x5>

00000710 <__ftoa_engine>:
 710:	28 30       	cpi	r18, 0x08	; 8
 712:	08 f0       	brcs	.+2      	; 0x716 <__ftoa_engine+0x6>
 714:	27 e0       	ldi	r18, 0x07	; 7
 716:	33 27       	eor	r19, r19
 718:	da 01       	movw	r26, r20
 71a:	99 0f       	add	r25, r25
 71c:	31 1d       	adc	r19, r1
 71e:	87 fd       	sbrc	r24, 7
 720:	91 60       	ori	r25, 0x01	; 1
 722:	00 96       	adiw	r24, 0x00	; 0
 724:	61 05       	cpc	r22, r1
 726:	71 05       	cpc	r23, r1
 728:	39 f4       	brne	.+14     	; 0x738 <__ftoa_engine+0x28>
 72a:	32 60       	ori	r19, 0x02	; 2
 72c:	2e 5f       	subi	r18, 0xFE	; 254
 72e:	3d 93       	st	X+, r19
 730:	30 e3       	ldi	r19, 0x30	; 48
 732:	2a 95       	dec	r18
 734:	e1 f7       	brne	.-8      	; 0x72e <__ftoa_engine+0x1e>
 736:	08 95       	ret
 738:	9f 3f       	cpi	r25, 0xFF	; 255
 73a:	30 f0       	brcs	.+12     	; 0x748 <__ftoa_engine+0x38>
 73c:	80 38       	cpi	r24, 0x80	; 128
 73e:	71 05       	cpc	r23, r1
 740:	61 05       	cpc	r22, r1
 742:	09 f0       	breq	.+2      	; 0x746 <__ftoa_engine+0x36>
 744:	3c 5f       	subi	r19, 0xFC	; 252
 746:	3c 5f       	subi	r19, 0xFC	; 252
 748:	3d 93       	st	X+, r19
 74a:	91 30       	cpi	r25, 0x01	; 1
 74c:	08 f0       	brcs	.+2      	; 0x750 <__ftoa_engine+0x40>
 74e:	80 68       	ori	r24, 0x80	; 128
 750:	91 1d       	adc	r25, r1
 752:	df 93       	push	r29
 754:	cf 93       	push	r28
 756:	1f 93       	push	r17
 758:	0f 93       	push	r16
 75a:	ff 92       	push	r15
 75c:	ef 92       	push	r14
 75e:	19 2f       	mov	r17, r25
 760:	98 7f       	andi	r25, 0xF8	; 248
 762:	96 95       	lsr	r25
 764:	e9 2f       	mov	r30, r25
 766:	96 95       	lsr	r25
 768:	96 95       	lsr	r25
 76a:	e9 0f       	add	r30, r25
 76c:	ff 27       	eor	r31, r31
 76e:	ee 53       	subi	r30, 0x3E	; 62
 770:	ff 4f       	sbci	r31, 0xFF	; 255
 772:	99 27       	eor	r25, r25
 774:	33 27       	eor	r19, r19
 776:	ee 24       	eor	r14, r14
 778:	ff 24       	eor	r15, r15
 77a:	a7 01       	movw	r20, r14
 77c:	e7 01       	movw	r28, r14
 77e:	05 90       	lpm	r0, Z+
 780:	08 94       	sec
 782:	07 94       	ror	r0
 784:	28 f4       	brcc	.+10     	; 0x790 <__ftoa_engine+0x80>
 786:	36 0f       	add	r19, r22
 788:	e7 1e       	adc	r14, r23
 78a:	f8 1e       	adc	r15, r24
 78c:	49 1f       	adc	r20, r25
 78e:	51 1d       	adc	r21, r1
 790:	66 0f       	add	r22, r22
 792:	77 1f       	adc	r23, r23
 794:	88 1f       	adc	r24, r24
 796:	99 1f       	adc	r25, r25
 798:	06 94       	lsr	r0
 79a:	a1 f7       	brne	.-24     	; 0x784 <__ftoa_engine+0x74>
 79c:	05 90       	lpm	r0, Z+
 79e:	07 94       	ror	r0
 7a0:	28 f4       	brcc	.+10     	; 0x7ac <__ftoa_engine+0x9c>
 7a2:	e7 0e       	add	r14, r23
 7a4:	f8 1e       	adc	r15, r24
 7a6:	49 1f       	adc	r20, r25
 7a8:	56 1f       	adc	r21, r22
 7aa:	c1 1d       	adc	r28, r1
 7ac:	77 0f       	add	r23, r23
 7ae:	88 1f       	adc	r24, r24
 7b0:	99 1f       	adc	r25, r25
 7b2:	66 1f       	adc	r22, r22
 7b4:	06 94       	lsr	r0
 7b6:	a1 f7       	brne	.-24     	; 0x7a0 <__ftoa_engine+0x90>
 7b8:	05 90       	lpm	r0, Z+
 7ba:	07 94       	ror	r0
 7bc:	28 f4       	brcc	.+10     	; 0x7c8 <__ftoa_engine+0xb8>
 7be:	f8 0e       	add	r15, r24
 7c0:	49 1f       	adc	r20, r25
 7c2:	56 1f       	adc	r21, r22
 7c4:	c7 1f       	adc	r28, r23
 7c6:	d1 1d       	adc	r29, r1
 7c8:	88 0f       	add	r24, r24
 7ca:	99 1f       	adc	r25, r25
 7cc:	66 1f       	adc	r22, r22
 7ce:	77 1f       	adc	r23, r23
 7d0:	06 94       	lsr	r0
 7d2:	a1 f7       	brne	.-24     	; 0x7bc <__ftoa_engine+0xac>
 7d4:	05 90       	lpm	r0, Z+
 7d6:	07 94       	ror	r0
 7d8:	20 f4       	brcc	.+8      	; 0x7e2 <__ftoa_engine+0xd2>
 7da:	49 0f       	add	r20, r25
 7dc:	56 1f       	adc	r21, r22
 7de:	c7 1f       	adc	r28, r23
 7e0:	d8 1f       	adc	r29, r24
 7e2:	99 0f       	add	r25, r25
 7e4:	66 1f       	adc	r22, r22
 7e6:	77 1f       	adc	r23, r23
 7e8:	88 1f       	adc	r24, r24
 7ea:	06 94       	lsr	r0
 7ec:	a9 f7       	brne	.-22     	; 0x7d8 <__ftoa_engine+0xc8>
 7ee:	84 91       	lpm	r24, Z
 7f0:	10 95       	com	r17
 7f2:	17 70       	andi	r17, 0x07	; 7
 7f4:	41 f0       	breq	.+16     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7f6:	d6 95       	lsr	r29
 7f8:	c7 95       	ror	r28
 7fa:	57 95       	ror	r21
 7fc:	47 95       	ror	r20
 7fe:	f7 94       	ror	r15
 800:	e7 94       	ror	r14
 802:	1a 95       	dec	r17
 804:	c1 f7       	brne	.-16     	; 0x7f6 <__ftoa_engine+0xe6>
 806:	e8 e6       	ldi	r30, 0x68	; 104
 808:	f0 e0       	ldi	r31, 0x00	; 0
 80a:	68 94       	set
 80c:	15 90       	lpm	r1, Z+
 80e:	15 91       	lpm	r17, Z+
 810:	35 91       	lpm	r19, Z+
 812:	65 91       	lpm	r22, Z+
 814:	95 91       	lpm	r25, Z+
 816:	05 90       	lpm	r0, Z+
 818:	7f e2       	ldi	r23, 0x2F	; 47
 81a:	73 95       	inc	r23
 81c:	e1 18       	sub	r14, r1
 81e:	f1 0a       	sbc	r15, r17
 820:	43 0b       	sbc	r20, r19
 822:	56 0b       	sbc	r21, r22
 824:	c9 0b       	sbc	r28, r25
 826:	d0 09       	sbc	r29, r0
 828:	c0 f7       	brcc	.-16     	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 82a:	e1 0c       	add	r14, r1
 82c:	f1 1e       	adc	r15, r17
 82e:	43 1f       	adc	r20, r19
 830:	56 1f       	adc	r21, r22
 832:	c9 1f       	adc	r28, r25
 834:	d0 1d       	adc	r29, r0
 836:	7e f4       	brtc	.+30     	; 0x856 <__DATA_REGION_LENGTH__+0x56>
 838:	70 33       	cpi	r23, 0x30	; 48
 83a:	11 f4       	brne	.+4      	; 0x840 <__DATA_REGION_LENGTH__+0x40>
 83c:	8a 95       	dec	r24
 83e:	e6 cf       	rjmp	.-52     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 840:	e8 94       	clt
 842:	01 50       	subi	r16, 0x01	; 1
 844:	30 f0       	brcs	.+12     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 846:	08 0f       	add	r16, r24
 848:	0a f4       	brpl	.+2      	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
 84a:	00 27       	eor	r16, r16
 84c:	02 17       	cp	r16, r18
 84e:	08 f4       	brcc	.+2      	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 850:	20 2f       	mov	r18, r16
 852:	23 95       	inc	r18
 854:	02 2f       	mov	r16, r18
 856:	7a 33       	cpi	r23, 0x3A	; 58
 858:	28 f0       	brcs	.+10     	; 0x864 <__DATA_REGION_LENGTH__+0x64>
 85a:	79 e3       	ldi	r23, 0x39	; 57
 85c:	7d 93       	st	X+, r23
 85e:	2a 95       	dec	r18
 860:	e9 f7       	brne	.-6      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 862:	10 c0       	rjmp	.+32     	; 0x884 <__DATA_REGION_LENGTH__+0x84>
 864:	7d 93       	st	X+, r23
 866:	2a 95       	dec	r18
 868:	89 f6       	brne	.-94     	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 86a:	06 94       	lsr	r0
 86c:	97 95       	ror	r25
 86e:	67 95       	ror	r22
 870:	37 95       	ror	r19
 872:	17 95       	ror	r17
 874:	17 94       	ror	r1
 876:	e1 18       	sub	r14, r1
 878:	f1 0a       	sbc	r15, r17
 87a:	43 0b       	sbc	r20, r19
 87c:	56 0b       	sbc	r21, r22
 87e:	c9 0b       	sbc	r28, r25
 880:	d0 09       	sbc	r29, r0
 882:	98 f0       	brcs	.+38     	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
 884:	23 95       	inc	r18
 886:	7e 91       	ld	r23, -X
 888:	73 95       	inc	r23
 88a:	7a 33       	cpi	r23, 0x3A	; 58
 88c:	08 f0       	brcs	.+2      	; 0x890 <__DATA_REGION_LENGTH__+0x90>
 88e:	70 e3       	ldi	r23, 0x30	; 48
 890:	7c 93       	st	X, r23
 892:	20 13       	cpse	r18, r16
 894:	b8 f7       	brcc	.-18     	; 0x884 <__DATA_REGION_LENGTH__+0x84>
 896:	7e 91       	ld	r23, -X
 898:	70 61       	ori	r23, 0x10	; 16
 89a:	7d 93       	st	X+, r23
 89c:	30 f0       	brcs	.+12     	; 0x8aa <__DATA_REGION_LENGTH__+0xaa>
 89e:	83 95       	inc	r24
 8a0:	71 e3       	ldi	r23, 0x31	; 49
 8a2:	7d 93       	st	X+, r23
 8a4:	70 e3       	ldi	r23, 0x30	; 48
 8a6:	2a 95       	dec	r18
 8a8:	e1 f7       	brne	.-8      	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
 8aa:	11 24       	eor	r1, r1
 8ac:	ef 90       	pop	r14
 8ae:	ff 90       	pop	r15
 8b0:	0f 91       	pop	r16
 8b2:	1f 91       	pop	r17
 8b4:	cf 91       	pop	r28
 8b6:	df 91       	pop	r29
 8b8:	99 27       	eor	r25, r25
 8ba:	87 fd       	sbrc	r24, 7
 8bc:	90 95       	com	r25
 8be:	08 95       	ret

000008c0 <__prologue_saves__>:
 8c0:	2f 92       	push	r2
 8c2:	3f 92       	push	r3
 8c4:	4f 92       	push	r4
 8c6:	5f 92       	push	r5
 8c8:	6f 92       	push	r6
 8ca:	7f 92       	push	r7
 8cc:	8f 92       	push	r8
 8ce:	9f 92       	push	r9
 8d0:	af 92       	push	r10
 8d2:	bf 92       	push	r11
 8d4:	cf 92       	push	r12
 8d6:	df 92       	push	r13
 8d8:	ef 92       	push	r14
 8da:	ff 92       	push	r15
 8dc:	0f 93       	push	r16
 8de:	1f 93       	push	r17
 8e0:	cf 93       	push	r28
 8e2:	df 93       	push	r29
 8e4:	cd b7       	in	r28, 0x3d	; 61
 8e6:	de b7       	in	r29, 0x3e	; 62
 8e8:	ca 1b       	sub	r28, r26
 8ea:	db 0b       	sbc	r29, r27
 8ec:	0f b6       	in	r0, 0x3f	; 63
 8ee:	f8 94       	cli
 8f0:	de bf       	out	0x3e, r29	; 62
 8f2:	0f be       	out	0x3f, r0	; 63
 8f4:	cd bf       	out	0x3d, r28	; 61
 8f6:	09 94       	ijmp

000008f8 <__epilogue_restores__>:
 8f8:	2a 88       	ldd	r2, Y+18	; 0x12
 8fa:	39 88       	ldd	r3, Y+17	; 0x11
 8fc:	48 88       	ldd	r4, Y+16	; 0x10
 8fe:	5f 84       	ldd	r5, Y+15	; 0x0f
 900:	6e 84       	ldd	r6, Y+14	; 0x0e
 902:	7d 84       	ldd	r7, Y+13	; 0x0d
 904:	8c 84       	ldd	r8, Y+12	; 0x0c
 906:	9b 84       	ldd	r9, Y+11	; 0x0b
 908:	aa 84       	ldd	r10, Y+10	; 0x0a
 90a:	b9 84       	ldd	r11, Y+9	; 0x09
 90c:	c8 84       	ldd	r12, Y+8	; 0x08
 90e:	df 80       	ldd	r13, Y+7	; 0x07
 910:	ee 80       	ldd	r14, Y+6	; 0x06
 912:	fd 80       	ldd	r15, Y+5	; 0x05
 914:	0c 81       	ldd	r16, Y+4	; 0x04
 916:	1b 81       	ldd	r17, Y+3	; 0x03
 918:	aa 81       	ldd	r26, Y+2	; 0x02
 91a:	b9 81       	ldd	r27, Y+1	; 0x01
 91c:	ce 0f       	add	r28, r30
 91e:	d1 1d       	adc	r29, r1
 920:	0f b6       	in	r0, 0x3f	; 63
 922:	f8 94       	cli
 924:	de bf       	out	0x3e, r29	; 62
 926:	0f be       	out	0x3f, r0	; 63
 928:	cd bf       	out	0x3d, r28	; 61
 92a:	ed 01       	movw	r28, r26
 92c:	08 95       	ret

0000092e <_exit>:
 92e:	f8 94       	cli

00000930 <__stop_program>:
 930:	ff cf       	rjmp	.-2      	; 0x930 <__stop_program>
