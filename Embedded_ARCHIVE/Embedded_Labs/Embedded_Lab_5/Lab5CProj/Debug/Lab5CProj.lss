
Lab5CProj.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ca  00800100  00001344  000013d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001344  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000d  008001ca  008001ca  000014a2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001500  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00001540  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000118c  00000000  00000000  000015d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000087f  00000000  00000000  00002764  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000008c5  00000000  00000000  00002fe3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  000038a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004d0  00000000  00000000  00003a48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007f1  00000000  00000000  00003f18  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  00004709  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 cf 00 	jmp	0x19e	; 0x19e <__ctors_end>
       4:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
       8:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
       c:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      10:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      14:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      18:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      1c:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      20:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      24:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      28:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      2c:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      30:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      34:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      38:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      3c:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      40:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      44:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      48:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      4c:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      50:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      54:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      58:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      5c:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      60:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>
      64:	0c 94 ec 00 	jmp	0x1d8	; 0x1d8 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	4e 41       	sbci	r20, 0x1E	; 30
      6a:	4e 49       	Address 0x0000006a is out of bounds.
.word	0xffff	; ????

0000006b <pstr_inity>:
      6b:	49 4e 49 54 59                                      INITY

00000070 <pstr_inf>:
      70:	49 4e 46                                            INF

00000073 <pwr_m10>:
      73:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      83:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

0000008b <pwr_p10>:
      8b:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      9b:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
      ab:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
      bb:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
      cb:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
      db:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
      eb:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
      fb:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     10b:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     11b:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     12b:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     13b:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     14b:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     15b:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     16b:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     17b:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     18b:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     19b:	3d 27 00                                            ='.

0000019e <__ctors_end>:
     19e:	11 24       	eor	r1, r1
     1a0:	1f be       	out	0x3f, r1	; 63
     1a2:	cf ef       	ldi	r28, 0xFF	; 255
     1a4:	d8 e0       	ldi	r29, 0x08	; 8
     1a6:	de bf       	out	0x3e, r29	; 62
     1a8:	cd bf       	out	0x3d, r28	; 61

000001aa <__do_copy_data>:
     1aa:	11 e0       	ldi	r17, 0x01	; 1
     1ac:	a0 e0       	ldi	r26, 0x00	; 0
     1ae:	b1 e0       	ldi	r27, 0x01	; 1
     1b0:	e4 e4       	ldi	r30, 0x44	; 68
     1b2:	f3 e1       	ldi	r31, 0x13	; 19
     1b4:	02 c0       	rjmp	.+4      	; 0x1ba <__do_copy_data+0x10>
     1b6:	05 90       	lpm	r0, Z+
     1b8:	0d 92       	st	X+, r0
     1ba:	aa 3c       	cpi	r26, 0xCA	; 202
     1bc:	b1 07       	cpc	r27, r17
     1be:	d9 f7       	brne	.-10     	; 0x1b6 <__do_copy_data+0xc>

000001c0 <__do_clear_bss>:
     1c0:	21 e0       	ldi	r18, 0x01	; 1
     1c2:	aa ec       	ldi	r26, 0xCA	; 202
     1c4:	b1 e0       	ldi	r27, 0x01	; 1
     1c6:	01 c0       	rjmp	.+2      	; 0x1ca <.do_clear_bss_start>

000001c8 <.do_clear_bss_loop>:
     1c8:	1d 92       	st	X+, r1

000001ca <.do_clear_bss_start>:
     1ca:	a7 3d       	cpi	r26, 0xD7	; 215
     1cc:	b2 07       	cpc	r27, r18
     1ce:	e1 f7       	brne	.-8      	; 0x1c8 <.do_clear_bss_loop>
     1d0:	0e 94 ad 03 	call	0x75a	; 0x75a <main>
     1d4:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <_exit>

000001d8 <__bad_interrupt>:
     1d8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001dc <i2c_init>:
	TWCR = (1<<TWINT) | (1<<TWEN);
	while(!(TWCR & (1<<TWINT)));
	
    return TWDR;

}/* i2c_readNak */
     1dc:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     1e0:	88 e4       	ldi	r24, 0x48	; 72
     1e2:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
     1e6:	08 95       	ret

000001e8 <i2c_start>:
     1e8:	94 ea       	ldi	r25, 0xA4	; 164
     1ea:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     1ee:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     1f2:	99 23       	and	r25, r25
     1f4:	e4 f7       	brge	.-8      	; 0x1ee <i2c_start+0x6>
     1f6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     1fa:	98 7f       	andi	r25, 0xF8	; 248
     1fc:	98 30       	cpi	r25, 0x08	; 8
     1fe:	11 f0       	breq	.+4      	; 0x204 <i2c_start+0x1c>
     200:	90 31       	cpi	r25, 0x10	; 16
     202:	91 f4       	brne	.+36     	; 0x228 <i2c_start+0x40>
     204:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     208:	84 e8       	ldi	r24, 0x84	; 132
     20a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     20e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     212:	88 23       	and	r24, r24
     214:	e4 f7       	brge	.-8      	; 0x20e <i2c_start+0x26>
     216:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     21a:	88 7f       	andi	r24, 0xF8	; 248
     21c:	88 31       	cpi	r24, 0x18	; 24
     21e:	31 f0       	breq	.+12     	; 0x22c <i2c_start+0x44>
     220:	80 34       	cpi	r24, 0x40	; 64
     222:	31 f4       	brne	.+12     	; 0x230 <i2c_start+0x48>
     224:	80 e0       	ldi	r24, 0x00	; 0
     226:	08 95       	ret
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	08 95       	ret
     22c:	80 e0       	ldi	r24, 0x00	; 0
     22e:	08 95       	ret
     230:	81 e0       	ldi	r24, 0x01	; 1
     232:	08 95       	ret

00000234 <i2c_stop>:
     234:	84 e9       	ldi	r24, 0x94	; 148
     236:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     23a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     23e:	84 fd       	sbrc	r24, 4
     240:	fc cf       	rjmp	.-8      	; 0x23a <i2c_stop+0x6>
     242:	08 95       	ret

00000244 <i2c_write>:
     244:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
     248:	84 e8       	ldi	r24, 0x84	; 132
     24a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     24e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
     252:	88 23       	and	r24, r24
     254:	e4 f7       	brge	.-8      	; 0x24e <i2c_write+0xa>
     256:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
     25a:	88 7f       	andi	r24, 0xF8	; 248
     25c:	88 32       	cpi	r24, 0x28	; 40
     25e:	11 f0       	breq	.+4      	; 0x264 <i2c_write+0x20>
     260:	81 e0       	ldi	r24, 0x01	; 1
     262:	08 95       	ret
     264:	80 e0       	ldi	r24, 0x00	; 0
     266:	08 95       	ret

00000268 <USART_Init>:


void USART_Init( unsigned int ubrr)
{
	///*Set baud rate */
	UBRR0H = (unsigned char)(ubrr>>8);
     268:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
	UBRR0L = (unsigned char)ubrr;
     26c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
	/*Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
     270:	88 e1       	ldi	r24, 0x18	; 24
     272:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
	/* Set frame format: 8data, 2stop bit */
	UCSR0C = (1<<USBS0)|(3<<UCSZ00);
     276:	8e e0       	ldi	r24, 0x0E	; 14
     278:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     27c:	08 95       	ret

0000027e <USART_Transmit>:
}
void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
     27e:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     282:	95 ff       	sbrs	r25, 5
     284:	fc cf       	rjmp	.-8      	; 0x27e <USART_Transmit>
	;
	/* Put data into buffer, sends the data */
	UDR0 = data;
     286:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     28a:	08 95       	ret

0000028c <USART_Receive>:
}
unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) );
     28c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     290:	88 23       	and	r24, r24
     292:	e4 f7       	brge	.-8      	; 0x28c <USART_Receive>
	/* Get and return received data from buffer */
	//Dtostrf
	return UDR0;
     294:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     298:	08 95       	ret

0000029a <ADC_Init>:

void ADC_Init(void)
{
	ADMUX = (1<<REFS0); //set to VCC and to A0
     29a:	80 e4       	ldi	r24, 0x40	; 64
     29c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
     2a0:	87 e8       	ldi	r24, 0x87	; 135
     2a2:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
     2a6:	08 95       	ret

000002a8 <get_ADC>:
	
	
}
void get_ADC(void)
{
     2a8:	0f 93       	push	r16
     2aa:	1f 93       	push	r17
     2ac:	cf 93       	push	r28
     2ae:	df 93       	push	r29
     2b0:	cd b7       	in	r28, 0x3d	; 61
     2b2:	de b7       	in	r29, 0x3e	; 62
     2b4:	27 97       	sbiw	r28, 0x07	; 7
     2b6:	0f b6       	in	r0, 0x3f	; 63
     2b8:	f8 94       	cli
     2ba:	de bf       	out	0x3e, r29	; 62
     2bc:	0f be       	out	0x3f, r0	; 63
     2be:	cd bf       	out	0x3d, r28	; 61
	ADCSRA = ADCSRA | (1<<ADSC);
     2c0:	ea e7       	ldi	r30, 0x7A	; 122
     2c2:	f0 e0       	ldi	r31, 0x00	; 0
     2c4:	80 81       	ld	r24, Z
     2c6:	80 64       	ori	r24, 0x40	; 64
     2c8:	80 83       	st	Z, r24
	while(ADSC == 1){};
	float ADC_val = (ADC*5.0/1024.0);
     2ca:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     2ce:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	0e 94 1f 04 	call	0x83e	; 0x83e <__floatunsisf>
     2da:	20 e0       	ldi	r18, 0x00	; 0
     2dc:	30 e0       	ldi	r19, 0x00	; 0
     2de:	40 ea       	ldi	r20, 0xA0	; 160
     2e0:	50 e4       	ldi	r21, 0x40	; 64
     2e2:	0e 94 85 04 	call	0x90a	; 0x90a <__mulsf3>
     2e6:	20 e0       	ldi	r18, 0x00	; 0
     2e8:	30 e0       	ldi	r19, 0x00	; 0
     2ea:	40 e8       	ldi	r20, 0x80	; 128
     2ec:	5a e3       	ldi	r21, 0x3A	; 58
     2ee:	0e 94 85 04 	call	0x90a	; 0x90a <__mulsf3>
	char buffer[7];
	dtostrf(ADC_val,4,2,buffer);
     2f2:	8e 01       	movw	r16, r28
     2f4:	0f 5f       	subi	r16, 0xFF	; 255
     2f6:	1f 4f       	sbci	r17, 0xFF	; 255
     2f8:	22 e0       	ldi	r18, 0x02	; 2
     2fa:	44 e0       	ldi	r20, 0x04	; 4
     2fc:	0e 94 1a 05 	call	0xa34	; 0xa34 <dtostrf>
	USART_Transmit('v');
     300:	86 e7       	ldi	r24, 0x76	; 118
     302:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit('=');
     306:	8d e3       	ldi	r24, 0x3D	; 61
     308:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	for(int i = 0; i < sizeof(buffer); i++){
     30c:	00 e0       	ldi	r16, 0x00	; 0
     30e:	10 e0       	ldi	r17, 0x00	; 0
     310:	0b c0       	rjmp	.+22     	; 0x328 <get_ADC+0x80>
		USART_Transmit(buffer[i]);
     312:	e1 e0       	ldi	r30, 0x01	; 1
     314:	f0 e0       	ldi	r31, 0x00	; 0
     316:	ec 0f       	add	r30, r28
     318:	fd 1f       	adc	r31, r29
     31a:	e0 0f       	add	r30, r16
     31c:	f1 1f       	adc	r31, r17
     31e:	80 81       	ld	r24, Z
     320:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	float ADC_val = (ADC*5.0/1024.0);
	char buffer[7];
	dtostrf(ADC_val,4,2,buffer);
	USART_Transmit('v');
	USART_Transmit('=');
	for(int i = 0; i < sizeof(buffer); i++){
     324:	0f 5f       	subi	r16, 0xFF	; 255
     326:	1f 4f       	sbci	r17, 0xFF	; 255
     328:	07 30       	cpi	r16, 0x07	; 7
     32a:	11 05       	cpc	r17, r1
     32c:	90 f3       	brcs	.-28     	; 0x312 <get_ADC+0x6a>
		USART_Transmit(buffer[i]);
	}
	USART_Transmit(' ');
     32e:	80 e2       	ldi	r24, 0x20	; 32
     330:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit('V');
     334:	86 e5       	ldi	r24, 0x56	; 86
     336:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit(' ');
     33a:	80 e2       	ldi	r24, 0x20	; 32
     33c:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
}
     340:	27 96       	adiw	r28, 0x07	; 7
     342:	0f b6       	in	r0, 0x3f	; 63
     344:	f8 94       	cli
     346:	de bf       	out	0x3e, r29	; 62
     348:	0f be       	out	0x3f, r0	; 63
     34a:	cd bf       	out	0x3d, r28	; 61
     34c:	df 91       	pop	r29
     34e:	cf 91       	pop	r28
     350:	1f 91       	pop	r17
     352:	0f 91       	pop	r16
     354:	08 95       	ret

00000356 <W_command>:
unsigned char data[11];
int sinn[] = {128,141,153,165,177,188,199,209,219,227,234,241,246,250,254,255,255,255,254,250,246,241,234,227,219,209,199,188,177,165,153,141,128,115,103,91,79,68,57,47,37,29,22,15,10,6,2,1,0,1,2,6,10,15,22,29,37,47,57,68,79,91,103,115};

void W_command()
{
     356:	6f 92       	push	r6
     358:	7f 92       	push	r7
     35a:	8f 92       	push	r8
     35c:	9f 92       	push	r9
     35e:	af 92       	push	r10
     360:	bf 92       	push	r11
     362:	cf 92       	push	r12
     364:	df 92       	push	r13
     366:	ef 92       	push	r14
     368:	ff 92       	push	r15
     36a:	0f 93       	push	r16
     36c:	1f 93       	push	r17
     36e:	cf 93       	push	r28
     370:	df 93       	push	r29
     372:	cd b7       	in	r28, 0x3d	; 61
     374:	de b7       	in	r29, 0x3e	; 62
     376:	e6 97       	sbiw	r28, 0x36	; 54
     378:	0f b6       	in	r0, 0x3f	; 63
     37a:	f8 94       	cli
     37c:	de bf       	out	0x3e, r29	; 62
     37e:	0f be       	out	0x3f, r0	; 63
     380:	cd bf       	out	0x3d, r28	; 61
		}
	}
	//USART_Transmit('a');
	//i2c_stop();
	
}
     382:	6d b6       	in	r6, 0x3d	; 61
     384:	7e b6       	in	r7, 0x3e	; 62

void W_command()
{
	//USART_Transmit('s');
	//USART_Transmit('u');
	int out = data[2]-'0';
     386:	ea ec       	ldi	r30, 0xCA	; 202
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	02 81       	ldd	r16, Z+2	; 0x02
     38c:	10 e0       	ldi	r17, 0x00	; 0
     38e:	00 53       	subi	r16, 0x30	; 48
     390:	11 09       	sbc	r17, r1
	int x = 0;
	int r;
	if(data[8] == ' ') //single digit
     392:	20 85       	ldd	r18, Z+8	; 0x08
     394:	20 32       	cpi	r18, 0x20	; 32
     396:	51 f4       	brne	.+20     	; 0x3ac <W_command+0x56>
	{
		r = data[7]-'0';
     398:	c0 90 d1 01 	lds	r12, 0x01D1	; 0x8001d1 <__data_end+0x7>
     39c:	d1 2c       	mov	r13, r1
     39e:	20 e3       	ldi	r18, 0x30	; 48
     3a0:	c2 1a       	sub	r12, r18
     3a2:	d1 08       	sbc	r13, r1
		x =1;
     3a4:	ee 24       	eor	r14, r14
     3a6:	e3 94       	inc	r14
     3a8:	f1 2c       	mov	r15, r1
     3aa:	41 c0       	rjmp	.+130    	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
		//USART_Transmit(r + '0');
		
	}else if(data[9] == ' ') //two digits
     3ac:	80 91 d3 01 	lds	r24, 0x01D3	; 0x8001d3 <__data_end+0x9>
     3b0:	80 32       	cpi	r24, 0x20	; 32
     3b2:	d9 f4       	brne	.+54     	; 0x3ea <W_command+0x94>
	{
		int i = data[7]-'0';
     3b4:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <__data_end+0x7>
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	c0 97       	sbiw	r24, 0x30	; 48
		i = i*10;
     3bc:	6c 01       	movw	r12, r24
     3be:	cc 0c       	add	r12, r12
     3c0:	dd 1c       	adc	r13, r13
     3c2:	88 0f       	add	r24, r24
     3c4:	99 1f       	adc	r25, r25
     3c6:	88 0f       	add	r24, r24
     3c8:	99 1f       	adc	r25, r25
     3ca:	88 0f       	add	r24, r24
     3cc:	99 1f       	adc	r25, r25
     3ce:	8c 0d       	add	r24, r12
     3d0:	9d 1d       	adc	r25, r13
		int j = data[8]-'0';
     3d2:	c2 2e       	mov	r12, r18
     3d4:	d1 2c       	mov	r13, r1
     3d6:	e0 e3       	ldi	r30, 0x30	; 48
     3d8:	ce 1a       	sub	r12, r30
     3da:	d1 08       	sbc	r13, r1
		r = i+j;
     3dc:	c8 0e       	add	r12, r24
     3de:	d9 1e       	adc	r13, r25
		x = 2;
     3e0:	68 94       	set
     3e2:	ee 24       	eor	r14, r14
     3e4:	e1 f8       	bld	r14, 1
     3e6:	f1 2c       	mov	r15, r1
     3e8:	22 c0       	rjmp	.+68     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
		
	}else  //else three digits
	{
		int i = (data[7]-'0')*100;
     3ea:	80 91 d1 01 	lds	r24, 0x01D1	; 0x8001d1 <__data_end+0x7>
     3ee:	90 e0       	ldi	r25, 0x00	; 0
     3f0:	c0 97       	sbiw	r24, 0x30	; 48
     3f2:	34 e6       	ldi	r19, 0x64	; 100
     3f4:	38 9f       	mul	r19, r24
     3f6:	60 01       	movw	r12, r0
     3f8:	39 9f       	mul	r19, r25
     3fa:	d0 0c       	add	r13, r0
     3fc:	11 24       	eor	r1, r1
		int j = (data[7]-'0')*10;
     3fe:	ac 01       	movw	r20, r24
     400:	44 0f       	add	r20, r20
     402:	55 1f       	adc	r21, r21
     404:	88 0f       	add	r24, r24
     406:	99 1f       	adc	r25, r25
     408:	88 0f       	add	r24, r24
     40a:	99 1f       	adc	r25, r25
     40c:	88 0f       	add	r24, r24
     40e:	99 1f       	adc	r25, r25
     410:	84 0f       	add	r24, r20
     412:	95 1f       	adc	r25, r21
		int k = data[8] - '0';
     414:	30 e0       	ldi	r19, 0x00	; 0
     416:	20 53       	subi	r18, 0x30	; 48
     418:	31 09       	sbc	r19, r1
		r = i+j+k;
     41a:	8c 0d       	add	r24, r12
     41c:	9d 1d       	adc	r25, r13
     41e:	69 01       	movw	r12, r18
     420:	c8 0e       	add	r12, r24
     422:	d9 1e       	adc	r13, r25
		x = 3;
     424:	0f 2e       	mov	r0, r31
     426:	f3 e0       	ldi	r31, 0x03	; 3
     428:	ef 2e       	mov	r14, r31
     42a:	f1 2c       	mov	r15, r1
     42c:	f0 2d       	mov	r31, r0
	}
	
	char msg [] = {'G','e','n','e','r','a','t','i','n','g',' ' };
     42e:	8b e0       	ldi	r24, 0x0B	; 11
     430:	e0 e8       	ldi	r30, 0x80	; 128
     432:	f1 e0       	ldi	r31, 0x01	; 1
     434:	de 01       	movw	r26, r28
     436:	11 96       	adiw	r26, 0x01	; 1
     438:	01 90       	ld	r0, Z+
     43a:	0d 92       	st	X+, r0
     43c:	8a 95       	dec	r24
     43e:	e1 f7       	brne	.-8      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
	for(int i = 0; i < sizeof(msg); i++){
     440:	a1 2c       	mov	r10, r1
     442:	b1 2c       	mov	r11, r1
     444:	0c c0       	rjmp	.+24     	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
		USART_Transmit(msg[i]);
     446:	e1 e0       	ldi	r30, 0x01	; 1
     448:	f0 e0       	ldi	r31, 0x00	; 0
     44a:	ec 0f       	add	r30, r28
     44c:	fd 1f       	adc	r31, r29
     44e:	ea 0d       	add	r30, r10
     450:	fb 1d       	adc	r31, r11
     452:	80 81       	ld	r24, Z
     454:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
		r = i+j+k;
		x = 3;
	}
	
	char msg [] = {'G','e','n','e','r','a','t','i','n','g',' ' };
	for(int i = 0; i < sizeof(msg); i++){
     458:	ff ef       	ldi	r31, 0xFF	; 255
     45a:	af 1a       	sub	r10, r31
     45c:	bf 0a       	sbc	r11, r31
     45e:	2b e0       	ldi	r18, 0x0B	; 11
     460:	a2 16       	cp	r10, r18
     462:	b1 04       	cpc	r11, r1
     464:	80 f3       	brcs	.-32     	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
		USART_Transmit(msg[i]);
	}
	char msggg [x];
     466:	57 01       	movw	r10, r14
     468:	8d b7       	in	r24, 0x3d	; 61
     46a:	9e b7       	in	r25, 0x3e	; 62
     46c:	8e 19       	sub	r24, r14
     46e:	9f 09       	sbc	r25, r15
     470:	0f b6       	in	r0, 0x3f	; 63
     472:	f8 94       	cli
     474:	9e bf       	out	0x3e, r25	; 62
     476:	0f be       	out	0x3f, r0	; 63
     478:	8d bf       	out	0x3d, r24	; 61
     47a:	6d b7       	in	r22, 0x3d	; 61
     47c:	7e b7       	in	r23, 0x3e	; 62
     47e:	6f 5f       	subi	r22, 0xFF	; 255
     480:	7f 4f       	sbci	r23, 0xFF	; 255
     482:	4b 01       	movw	r8, r22
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     484:	4a e0       	ldi	r20, 0x0A	; 10
     486:	c6 01       	movw	r24, r12
     488:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__itoa_ncheck>
	itoa(r, msggg, 10);
	for(int i = 0; i < sizeof(msggg); i++){
     48c:	e1 2c       	mov	r14, r1
     48e:	f1 2c       	mov	r15, r1
     490:	09 c0       	rjmp	.+18     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
		USART_Transmit(msggg[i]);
     492:	f4 01       	movw	r30, r8
     494:	ee 0d       	add	r30, r14
     496:	ff 1d       	adc	r31, r15
     498:	80 81       	ld	r24, Z
     49a:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	for(int i = 0; i < sizeof(msg); i++){
		USART_Transmit(msg[i]);
	}
	char msggg [x];
	itoa(r, msggg, 10);
	for(int i = 0; i < sizeof(msggg); i++){
     49e:	9f ef       	ldi	r25, 0xFF	; 255
     4a0:	e9 1a       	sub	r14, r25
     4a2:	f9 0a       	sbc	r15, r25
     4a4:	ea 14       	cp	r14, r10
     4a6:	fb 04       	cpc	r15, r11
     4a8:	a0 f3       	brcs	.-24     	; 0x492 <__EEPROM_REGION_LENGTH__+0x92>
		USART_Transmit(msggg[i]);
	}
	char msgg[] = {' ','s','i','n','e',' ','w','a','v','e',' ','c','y','c','l','e','s',' ','w','i','t','h',' ','f','='};
     4aa:	89 e1       	ldi	r24, 0x19	; 25
     4ac:	eb e8       	ldi	r30, 0x8B	; 139
     4ae:	f1 e0       	ldi	r31, 0x01	; 1
     4b0:	de 01       	movw	r26, r28
     4b2:	1c 96       	adiw	r26, 0x0c	; 12
     4b4:	01 90       	ld	r0, Z+
     4b6:	0d 92       	st	X+, r0
     4b8:	8a 95       	dec	r24
     4ba:	e1 f7       	brne	.-8      	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
	for(int i = 0; i < sizeof(msgg); i++){
     4bc:	e1 2c       	mov	r14, r1
     4be:	f1 2c       	mov	r15, r1
     4c0:	0c c0       	rjmp	.+24     	; 0x4da <__EEPROM_REGION_LENGTH__+0xda>
		USART_Transmit(msgg[i]);
     4c2:	ec e0       	ldi	r30, 0x0C	; 12
     4c4:	f0 e0       	ldi	r31, 0x00	; 0
     4c6:	ec 0f       	add	r30, r28
     4c8:	fd 1f       	adc	r31, r29
     4ca:	ee 0d       	add	r30, r14
     4cc:	ff 1d       	adc	r31, r15
     4ce:	80 81       	ld	r24, Z
     4d0:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	itoa(r, msggg, 10);
	for(int i = 0; i < sizeof(msggg); i++){
		USART_Transmit(msggg[i]);
	}
	char msgg[] = {' ','s','i','n','e',' ','w','a','v','e',' ','c','y','c','l','e','s',' ','w','i','t','h',' ','f','='};
	for(int i = 0; i < sizeof(msgg); i++){
     4d4:	ef ef       	ldi	r30, 0xFF	; 255
     4d6:	ee 1a       	sub	r14, r30
     4d8:	fe 0a       	sbc	r15, r30
     4da:	f9 e1       	ldi	r31, 0x19	; 25
     4dc:	ef 16       	cp	r14, r31
     4de:	f1 04       	cpc	r15, r1
     4e0:	80 f3       	brcs	.-32     	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
		USART_Transmit(msgg[i]);
	}
	USART_Transmit(data[4]);
     4e2:	0f 2e       	mov	r0, r31
     4e4:	fa ec       	ldi	r31, 0xCA	; 202
     4e6:	ef 2e       	mov	r14, r31
     4e8:	f1 e0       	ldi	r31, 0x01	; 1
     4ea:	ff 2e       	mov	r15, r31
     4ec:	f0 2d       	mov	r31, r0
     4ee:	f7 01       	movw	r30, r14
     4f0:	84 81       	ldd	r24, Z+4	; 0x04
     4f2:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit(data[5]);
     4f6:	f7 01       	movw	r30, r14
     4f8:	85 81       	ldd	r24, Z+5	; 0x05
     4fa:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit(' ');
     4fe:	80 e2       	ldi	r24, 0x20	; 32
     500:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	char msgggg[] = {'H','z',' ','o','n',' ','D','A','C',' ','c','h','a','n','n','e','l',' '};	
     504:	82 e1       	ldi	r24, 0x12	; 18
     506:	e4 ea       	ldi	r30, 0xA4	; 164
     508:	f1 e0       	ldi	r31, 0x01	; 1
     50a:	de 01       	movw	r26, r28
     50c:	95 96       	adiw	r26, 0x25	; 37
     50e:	01 90       	ld	r0, Z+
     510:	0d 92       	st	X+, r0
     512:	8a 95       	dec	r24
     514:	e1 f7       	brne	.-8      	; 0x50e <__EEPROM_REGION_LENGTH__+0x10e>
	for(int i = 0; i < sizeof(msgggg); i++){
     516:	e1 2c       	mov	r14, r1
     518:	f1 2c       	mov	r15, r1
     51a:	0c c0       	rjmp	.+24     	; 0x534 <__EEPROM_REGION_LENGTH__+0x134>
		USART_Transmit(msgggg[i]);
     51c:	e5 e2       	ldi	r30, 0x25	; 37
     51e:	f0 e0       	ldi	r31, 0x00	; 0
     520:	ec 0f       	add	r30, r28
     522:	fd 1f       	adc	r31, r29
     524:	ee 0d       	add	r30, r14
     526:	ff 1d       	adc	r31, r15
     528:	80 81       	ld	r24, Z
     52a:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	}
	USART_Transmit(data[4]);
	USART_Transmit(data[5]);
	USART_Transmit(' ');
	char msgggg[] = {'H','z',' ','o','n',' ','D','A','C',' ','c','h','a','n','n','e','l',' '};	
	for(int i = 0; i < sizeof(msgggg); i++){
     52e:	ff ef       	ldi	r31, 0xFF	; 255
     530:	ef 1a       	sub	r14, r31
     532:	ff 0a       	sbc	r15, r31
     534:	22 e1       	ldi	r18, 0x12	; 18
     536:	e2 16       	cp	r14, r18
     538:	f1 04       	cpc	r15, r1
     53a:	80 f3       	brcs	.-32     	; 0x51c <__EEPROM_REGION_LENGTH__+0x11c>
		USART_Transmit(msgggg[i]);
	}
	USART_Transmit(data[2]);
     53c:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <__data_end+0x2>
     540:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	for(int i=0; i<r; i++)
     544:	a1 2c       	mov	r10, r1
     546:	b1 2c       	mov	r11, r1
     548:	31 c0       	rjmp	.+98     	; 0x5ac <__EEPROM_REGION_LENGTH__+0x1ac>
	{
		//USART_Transmit('u');
		for(int j=0; j<(sizeof(sinn)/2); j++)
		{
			i2c_start(DAC);
     54a:	88 e5       	ldi	r24, 0x58	; 88
     54c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <i2c_start>
			i2c_write(out);
     550:	80 2f       	mov	r24, r16
     552:	0e 94 22 01 	call	0x244	; 0x244 <i2c_write>
			i2c_write(sinn[j]);
     556:	f7 01       	movw	r30, r14
     558:	ee 0f       	add	r30, r30
     55a:	ff 1f       	adc	r31, r31
     55c:	e0 50       	subi	r30, 0x00	; 0
     55e:	ff 4f       	sbci	r31, 0xFF	; 255
     560:	80 81       	ld	r24, Z
     562:	0e 94 22 01 	call	0x244	; 0x244 <i2c_write>
			if(data[4] == '1'){_delay_us(1250);} //was 1250
     566:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <__data_end+0x4>
     56a:	81 33       	cpi	r24, 0x31	; 49
     56c:	31 f4       	brne	.+12     	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     56e:	87 e8       	ldi	r24, 0x87	; 135
     570:	93 e1       	ldi	r25, 0x13	; 19
     572:	01 97       	sbiw	r24, 0x01	; 1
     574:	f1 f7       	brne	.-4      	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
     576:	00 c0       	rjmp	.+0      	; 0x578 <__EEPROM_REGION_LENGTH__+0x178>
     578:	00 00       	nop
			if(data[4] == '2'){_delay_us(500);}  //was 500
     57a:	80 91 ce 01 	lds	r24, 0x01CE	; 0x8001ce <__data_end+0x4>
     57e:	82 33       	cpi	r24, 0x32	; 50
     580:	31 f4       	brne	.+12     	; 0x58e <__EEPROM_REGION_LENGTH__+0x18e>
     582:	ef ec       	ldi	r30, 0xCF	; 207
     584:	f7 e0       	ldi	r31, 0x07	; 7
     586:	31 97       	sbiw	r30, 0x01	; 1
     588:	f1 f7       	brne	.-4      	; 0x586 <__EEPROM_REGION_LENGTH__+0x186>
     58a:	00 c0       	rjmp	.+0      	; 0x58c <__EEPROM_REGION_LENGTH__+0x18c>
     58c:	00 00       	nop
			//_delay_ms(dms);
			i2c_stop();
     58e:	0e 94 1a 01 	call	0x234	; 0x234 <i2c_stop>
	}
	USART_Transmit(data[2]);
	for(int i=0; i<r; i++)
	{
		//USART_Transmit('u');
		for(int j=0; j<(sizeof(sinn)/2); j++)
     592:	ff ef       	ldi	r31, 0xFF	; 255
     594:	ef 1a       	sub	r14, r31
     596:	ff 0a       	sbc	r15, r31
     598:	02 c0       	rjmp	.+4      	; 0x59e <__EEPROM_REGION_LENGTH__+0x19e>
     59a:	e1 2c       	mov	r14, r1
     59c:	f1 2c       	mov	r15, r1
     59e:	20 e4       	ldi	r18, 0x40	; 64
     5a0:	e2 16       	cp	r14, r18
     5a2:	f1 04       	cpc	r15, r1
     5a4:	90 f2       	brcs	.-92     	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
	char msgggg[] = {'H','z',' ','o','n',' ','D','A','C',' ','c','h','a','n','n','e','l',' '};	
	for(int i = 0; i < sizeof(msgggg); i++){
		USART_Transmit(msgggg[i]);
	}
	USART_Transmit(data[2]);
	for(int i=0; i<r; i++)
     5a6:	8f ef       	ldi	r24, 0xFF	; 255
     5a8:	a8 1a       	sub	r10, r24
     5aa:	b8 0a       	sbc	r11, r24
     5ac:	ac 14       	cp	r10, r12
     5ae:	bd 04       	cpc	r11, r13
     5b0:	a4 f3       	brlt	.-24     	; 0x59a <__EEPROM_REGION_LENGTH__+0x19a>
		}
	}
	//USART_Transmit('a');
	//i2c_stop();
	
}
     5b2:	0f b6       	in	r0, 0x3f	; 63
     5b4:	f8 94       	cli
     5b6:	7e be       	out	0x3e, r7	; 62
     5b8:	0f be       	out	0x3f, r0	; 63
     5ba:	6d be       	out	0x3d, r6	; 61
     5bc:	e6 96       	adiw	r28, 0x36	; 54
     5be:	0f b6       	in	r0, 0x3f	; 63
     5c0:	f8 94       	cli
     5c2:	de bf       	out	0x3e, r29	; 62
     5c4:	0f be       	out	0x3f, r0	; 63
     5c6:	cd bf       	out	0x3d, r28	; 61
     5c8:	df 91       	pop	r29
     5ca:	cf 91       	pop	r28
     5cc:	1f 91       	pop	r17
     5ce:	0f 91       	pop	r16
     5d0:	ff 90       	pop	r15
     5d2:	ef 90       	pop	r14
     5d4:	df 90       	pop	r13
     5d6:	cf 90       	pop	r12
     5d8:	bf 90       	pop	r11
     5da:	af 90       	pop	r10
     5dc:	9f 90       	pop	r9
     5de:	8f 90       	pop	r8
     5e0:	7f 90       	pop	r7
     5e2:	6f 90       	pop	r6
     5e4:	08 95       	ret

000005e6 <S_command>:

void S_command()
{
     5e6:	ef 92       	push	r14
     5e8:	ff 92       	push	r15
     5ea:	0f 93       	push	r16
     5ec:	1f 93       	push	r17
     5ee:	cf 93       	push	r28
     5f0:	df 93       	push	r29
     5f2:	cd b7       	in	r28, 0x3d	; 61
     5f4:	de b7       	in	r29, 0x3e	; 62
     5f6:	6c 97       	sbiw	r28, 0x1c	; 28
     5f8:	0f b6       	in	r0, 0x3f	; 63
     5fa:	f8 94       	cli
     5fc:	de bf       	out	0x3e, r29	; 62
     5fe:	0f be       	out	0x3f, r0	; 63
     600:	cd bf       	out	0x3d, r28	; 61

	int out = data[2]-'0';
     602:	00 91 cc 01 	lds	r16, 0x01CC	; 0x8001cc <__data_end+0x2>
     606:	10 e0       	ldi	r17, 0x00	; 0
     608:	00 53       	subi	r16, 0x30	; 48
     60a:	11 09       	sbc	r17, r1
	
	char fltstr[5];
	strncpy(fltstr, data + 4, 4);
     60c:	44 e0       	ldi	r20, 0x04	; 4
     60e:	50 e0       	ldi	r21, 0x00	; 0
     610:	6e ec       	ldi	r22, 0xCE	; 206
     612:	71 e0       	ldi	r23, 0x01	; 1
     614:	ce 01       	movw	r24, r28
     616:	01 96       	adiw	r24, 0x01	; 1
     618:	0e 94 3e 05 	call	0xa7c	; 0xa7c <strncpy>
	fltstr[4] = 0;
     61c:	1d 82       	std	Y+5, r1	; 0x05
	//float num1 = data[4]-'0';
	//float num2 = (data[6]-'0')/10.0;
	//float num3 = (data[7]-'0')/100.0;

	//float final_val = num1 + num2 + num3;
	float final_val = atof(fltstr);
     61e:	ce 01       	movw	r24, r28
     620:	01 96       	adiw	r24, 0x01	; 1
     622:	0e 94 3a 05 	call	0xa74	; 0xa74 <atof>
	int final_int = final_val*51;
     626:	20 e0       	ldi	r18, 0x00	; 0
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	4c e4       	ldi	r20, 0x4C	; 76
     62c:	52 e4       	ldi	r21, 0x42	; 66
     62e:	0e 94 85 04 	call	0x90a	; 0x90a <__mulsf3>
     632:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fixsfsi>
     636:	f6 2e       	mov	r15, r22
     638:	e7 2e       	mov	r14, r23
	
	i2c_start(DAC);
     63a:	88 e5       	ldi	r24, 0x58	; 88
     63c:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <i2c_start>
	i2c_write(out);   //0 or 1
     640:	80 2f       	mov	r24, r16
     642:	0e 94 22 01 	call	0x244	; 0x244 <i2c_write>
	i2c_write(final_int);
     646:	8f 2d       	mov	r24, r15
     648:	0e 94 22 01 	call	0x244	; 0x244 <i2c_write>
	i2c_stop();
     64c:	0e 94 1a 01 	call	0x234	; 0x234 <i2c_stop>
	char msg [] = {'D','A','C',' ','c','h','a','n','n','e','l',' '};
     650:	8c e0       	ldi	r24, 0x0C	; 12
     652:	e6 eb       	ldi	r30, 0xB6	; 182
     654:	f1 e0       	ldi	r31, 0x01	; 1
     656:	de 01       	movw	r26, r28
     658:	16 96       	adiw	r26, 0x06	; 6
     65a:	01 90       	ld	r0, Z+
     65c:	0d 92       	st	X+, r0
     65e:	8a 95       	dec	r24
     660:	e1 f7       	brne	.-8      	; 0x65a <S_command+0x74>
	for(int i = 0; i < sizeof(msg); i++){
     662:	00 e0       	ldi	r16, 0x00	; 0
     664:	10 e0       	ldi	r17, 0x00	; 0
     666:	0b c0       	rjmp	.+22     	; 0x67e <S_command+0x98>
		USART_Transmit(msg[i]);
     668:	e6 e0       	ldi	r30, 0x06	; 6
     66a:	f0 e0       	ldi	r31, 0x00	; 0
     66c:	ec 0f       	add	r30, r28
     66e:	fd 1f       	adc	r31, r29
     670:	e0 0f       	add	r30, r16
     672:	f1 1f       	adc	r31, r17
     674:	80 81       	ld	r24, Z
     676:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	i2c_start(DAC);
	i2c_write(out);   //0 or 1
	i2c_write(final_int);
	i2c_stop();
	char msg [] = {'D','A','C',' ','c','h','a','n','n','e','l',' '};
	for(int i = 0; i < sizeof(msg); i++){
     67a:	0f 5f       	subi	r16, 0xFF	; 255
     67c:	1f 4f       	sbci	r17, 0xFF	; 255
     67e:	0c 30       	cpi	r16, 0x0C	; 12
     680:	11 05       	cpc	r17, r1
     682:	90 f3       	brcs	.-28     	; 0x668 <S_command+0x82>
		USART_Transmit(msg[i]);
	}
	USART_Transmit(data[2]);
     684:	80 91 cc 01 	lds	r24, 0x01CC	; 0x8001cc <__data_end+0x2>
     688:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	char msgg [] = {' ','s','e','t',' ', 't', 'o',' '};
     68c:	88 e0       	ldi	r24, 0x08	; 8
     68e:	e2 ec       	ldi	r30, 0xC2	; 194
     690:	f1 e0       	ldi	r31, 0x01	; 1
     692:	de 01       	movw	r26, r28
     694:	52 96       	adiw	r26, 0x12	; 18
     696:	01 90       	ld	r0, Z+
     698:	0d 92       	st	X+, r0
     69a:	8a 95       	dec	r24
     69c:	e1 f7       	brne	.-8      	; 0x696 <S_command+0xb0>
	for(int i = 0; i < sizeof(msgg); i++){
     69e:	00 e0       	ldi	r16, 0x00	; 0
     6a0:	10 e0       	ldi	r17, 0x00	; 0
     6a2:	0b c0       	rjmp	.+22     	; 0x6ba <S_command+0xd4>
		USART_Transmit(msgg[i]);
     6a4:	e2 e1       	ldi	r30, 0x12	; 18
     6a6:	f0 e0       	ldi	r31, 0x00	; 0
     6a8:	ec 0f       	add	r30, r28
     6aa:	fd 1f       	adc	r31, r29
     6ac:	e0 0f       	add	r30, r16
     6ae:	f1 1f       	adc	r31, r17
     6b0:	80 81       	ld	r24, Z
     6b2:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	for(int i = 0; i < sizeof(msg); i++){
		USART_Transmit(msg[i]);
	}
	USART_Transmit(data[2]);
	char msgg [] = {' ','s','e','t',' ', 't', 'o',' '};
	for(int i = 0; i < sizeof(msgg); i++){
     6b6:	0f 5f       	subi	r16, 0xFF	; 255
     6b8:	1f 4f       	sbci	r17, 0xFF	; 255
     6ba:	08 30       	cpi	r16, 0x08	; 8
     6bc:	11 05       	cpc	r17, r1
     6be:	90 f3       	brcs	.-28     	; 0x6a4 <S_command+0xbe>
		USART_Transmit(msgg[i]);
	}
	USART_Transmit(data[4]);
     6c0:	0a ec       	ldi	r16, 0xCA	; 202
     6c2:	11 e0       	ldi	r17, 0x01	; 1
     6c4:	f8 01       	movw	r30, r16
     6c6:	84 81       	ldd	r24, Z+4	; 0x04
     6c8:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit(data[5]);
     6cc:	f8 01       	movw	r30, r16
     6ce:	85 81       	ldd	r24, Z+5	; 0x05
     6d0:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit(data[6]);
     6d4:	f8 01       	movw	r30, r16
     6d6:	86 81       	ldd	r24, Z+6	; 0x06
     6d8:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit(data[7]);	
     6dc:	f8 01       	movw	r30, r16
     6de:	87 81       	ldd	r24, Z+7	; 0x07
     6e0:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit(' ');
     6e4:	80 e2       	ldi	r24, 0x20	; 32
     6e6:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit('V'); 
     6ea:	86 e5       	ldi	r24, 0x56	; 86
     6ec:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit(' ');
     6f0:	80 e2       	ldi	r24, 0x20	; 32
     6f2:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit('(');
     6f6:	88 e2       	ldi	r24, 0x28	; 40
     6f8:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
     6fc:	4a e0       	ldi	r20, 0x0A	; 10
     6fe:	be 01       	movw	r22, r28
     700:	66 5e       	subi	r22, 0xE6	; 230
     702:	7f 4f       	sbci	r23, 0xFF	; 255
     704:	8f 2d       	mov	r24, r15
     706:	9e 2d       	mov	r25, r14
     708:	0e 94 4d 05 	call	0xa9a	; 0xa9a <__itoa_ncheck>
	char msggg [3];
	itoa(final_int, msggg, 10);
	for(int i = 0; i < sizeof(msggg); i++){
     70c:	00 e0       	ldi	r16, 0x00	; 0
     70e:	10 e0       	ldi	r17, 0x00	; 0
     710:	0b c0       	rjmp	.+22     	; 0x728 <S_command+0x142>
		USART_Transmit(msggg[i]);
     712:	ea e1       	ldi	r30, 0x1A	; 26
     714:	f0 e0       	ldi	r31, 0x00	; 0
     716:	ec 0f       	add	r30, r28
     718:	fd 1f       	adc	r31, r29
     71a:	e0 0f       	add	r30, r16
     71c:	f1 1f       	adc	r31, r17
     71e:	80 81       	ld	r24, Z
     720:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit('V'); 
	USART_Transmit(' ');
	USART_Transmit('(');
	char msggg [3];
	itoa(final_int, msggg, 10);
	for(int i = 0; i < sizeof(msggg); i++){
     724:	0f 5f       	subi	r16, 0xFF	; 255
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	03 30       	cpi	r16, 0x03	; 3
     72a:	11 05       	cpc	r17, r1
     72c:	90 f3       	brcs	.-28     	; 0x712 <S_command+0x12c>
		USART_Transmit(msggg[i]);
	}
	USART_Transmit('d');
     72e:	84 e6       	ldi	r24, 0x64	; 100
     730:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit(')');
     734:	89 e2       	ldi	r24, 0x29	; 41
     736:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
	USART_Transmit(' ');
     73a:	80 e2       	ldi	r24, 0x20	; 32
     73c:	0e 94 3f 01 	call	0x27e	; 0x27e <USART_Transmit>
}
     740:	6c 96       	adiw	r28, 0x1c	; 28
     742:	0f b6       	in	r0, 0x3f	; 63
     744:	f8 94       	cli
     746:	de bf       	out	0x3e, r29	; 62
     748:	0f be       	out	0x3f, r0	; 63
     74a:	cd bf       	out	0x3d, r28	; 61
     74c:	df 91       	pop	r29
     74e:	cf 91       	pop	r28
     750:	1f 91       	pop	r17
     752:	0f 91       	pop	r16
     754:	ff 90       	pop	r15
     756:	ef 90       	pop	r14
     758:	08 95       	ret

0000075a <main>:


int main(void)
{
	
	USART_Init(MYUBRR);
     75a:	87 e6       	ldi	r24, 0x67	; 103
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	0e 94 34 01 	call	0x268	; 0x268 <USART_Init>
	ADC_Init();
     762:	0e 94 4d 01 	call	0x29a	; 0x29a <ADC_Init>
	i2c_init();
     766:	0e 94 ee 00 	call	0x1dc	; 0x1dc <i2c_init>
		//get_String();
		/* Wait for data to be received */
		int i = 0;
		int len = 0;
		//USART_Transmit('p');
		unsigned char c = USART_Receive();
     76a:	0e 94 46 01 	call	0x28c	; 0x28c <USART_Receive>
		//USART_Transmit(c);
		if ( c == 'G')
     76e:	87 34       	cpi	r24, 0x47	; 71
     770:	19 f4       	brne	.+6      	; 0x778 <main+0x1e>
		{
			get_ADC();
     772:	0e 94 54 01 	call	0x2a8	; 0x2a8 <get_ADC>
     776:	f9 cf       	rjmp	.-14     	; 0x76a <main+0x10>
		}
		//goto G function
		else if(c == 'S')
     778:	83 35       	cpi	r24, 0x53	; 83
     77a:	91 f4       	brne	.+36     	; 0x7a0 <main+0x46>
		{
			len = 8;
			data[0] = c;
     77c:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__data_end>
			i=1;
     780:	c1 e0       	ldi	r28, 0x01	; 1
     782:	d0 e0       	ldi	r29, 0x00	; 0
			while(i != len)
     784:	07 c0       	rjmp	.+14     	; 0x794 <main+0x3a>
			{
				data[i] = USART_Receive();
     786:	0e 94 46 01 	call	0x28c	; 0x28c <USART_Receive>
     78a:	fe 01       	movw	r30, r28
     78c:	e6 53       	subi	r30, 0x36	; 54
     78e:	fe 4f       	sbci	r31, 0xFE	; 254
     790:	80 83       	st	Z, r24
				i++;
     792:	21 96       	adiw	r28, 0x01	; 1
		else if(c == 'S')
		{
			len = 8;
			data[0] = c;
			i=1;
			while(i != len)
     794:	c8 30       	cpi	r28, 0x08	; 8
     796:	d1 05       	cpc	r29, r1
     798:	b1 f7       	brne	.-20     	; 0x786 <main+0x2c>
			{
				data[i] = USART_Receive();
				i++;
			}
			S_command();
     79a:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <S_command>
     79e:	e5 cf       	rjmp	.-54     	; 0x76a <main+0x10>
		}else if(c == 'W')
     7a0:	87 35       	cpi	r24, 0x57	; 87
     7a2:	19 f7       	brne	.-58     	; 0x76a <main+0x10>
		{
			len = 50;
			data[0] = c;
     7a4:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__data_end>
			i=1;
     7a8:	c1 e0       	ldi	r28, 0x01	; 1
     7aa:	d0 e0       	ldi	r29, 0x00	; 0
			bool done = false;
			while(i != len)
     7ac:	0c c0       	rjmp	.+24     	; 0x7c6 <main+0x6c>
			{
				//USART_Transmit('u');
				data[i] = USART_Receive();
     7ae:	0e 94 46 01 	call	0x28c	; 0x28c <USART_Receive>
     7b2:	fe 01       	movw	r30, r28
     7b4:	e6 53       	subi	r30, 0x36	; 54
     7b6:	fe 4f       	sbci	r31, 0xFE	; 254
     7b8:	80 83       	st	Z, r24
				if(data[i] == ' ')
     7ba:	80 32       	cpi	r24, 0x20	; 32
     7bc:	11 f0       	breq	.+4      	; 0x7c2 <main+0x68>
				{
					//done = true;
					i = len;
					}else{
					//USART_Transmit(data[i]);
					i++;
     7be:	21 96       	adiw	r28, 0x01	; 1
     7c0:	02 c0       	rjmp	.+4      	; 0x7c6 <main+0x6c>
				//USART_Transmit('u');
				data[i] = USART_Receive();
				if(data[i] == ' ')
				{
					//done = true;
					i = len;
     7c2:	c2 e3       	ldi	r28, 0x32	; 50
     7c4:	d0 e0       	ldi	r29, 0x00	; 0
		{
			len = 50;
			data[0] = c;
			i=1;
			bool done = false;
			while(i != len)
     7c6:	c2 33       	cpi	r28, 0x32	; 50
     7c8:	d1 05       	cpc	r29, r1
     7ca:	89 f7       	brne	.-30     	; 0x7ae <main+0x54>
					}else{
					//USART_Transmit(data[i]);
					i++;
				}
			}
			W_command();
     7cc:	0e 94 ab 01 	call	0x356	; 0x356 <W_command>
     7d0:	cc cf       	rjmp	.-104    	; 0x76a <main+0x10>

000007d2 <__fixsfsi>:
     7d2:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__fixunssfsi>
     7d6:	68 94       	set
     7d8:	b1 11       	cpse	r27, r1
     7da:	0c 94 7f 04 	jmp	0x8fe	; 0x8fe <__fp_szero>
     7de:	08 95       	ret

000007e0 <__fixunssfsi>:
     7e0:	0e 94 64 04 	call	0x8c8	; 0x8c8 <__fp_splitA>
     7e4:	88 f0       	brcs	.+34     	; 0x808 <__DATA_REGION_LENGTH__+0x8>
     7e6:	9f 57       	subi	r25, 0x7F	; 127
     7e8:	98 f0       	brcs	.+38     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
     7ea:	b9 2f       	mov	r27, r25
     7ec:	99 27       	eor	r25, r25
     7ee:	b7 51       	subi	r27, 0x17	; 23
     7f0:	b0 f0       	brcs	.+44     	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     7f2:	e1 f0       	breq	.+56     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     7f4:	66 0f       	add	r22, r22
     7f6:	77 1f       	adc	r23, r23
     7f8:	88 1f       	adc	r24, r24
     7fa:	99 1f       	adc	r25, r25
     7fc:	1a f0       	brmi	.+6      	; 0x804 <__DATA_REGION_LENGTH__+0x4>
     7fe:	ba 95       	dec	r27
     800:	c9 f7       	brne	.-14     	; 0x7f4 <__fixunssfsi+0x14>
     802:	14 c0       	rjmp	.+40     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     804:	b1 30       	cpi	r27, 0x01	; 1
     806:	91 f0       	breq	.+36     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     808:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__fp_zero>
     80c:	b1 e0       	ldi	r27, 0x01	; 1
     80e:	08 95       	ret
     810:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_zero>
     814:	67 2f       	mov	r22, r23
     816:	78 2f       	mov	r23, r24
     818:	88 27       	eor	r24, r24
     81a:	b8 5f       	subi	r27, 0xF8	; 248
     81c:	39 f0       	breq	.+14     	; 0x82c <__DATA_REGION_LENGTH__+0x2c>
     81e:	b9 3f       	cpi	r27, 0xF9	; 249
     820:	cc f3       	brlt	.-14     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
     822:	86 95       	lsr	r24
     824:	77 95       	ror	r23
     826:	67 95       	ror	r22
     828:	b3 95       	inc	r27
     82a:	d9 f7       	brne	.-10     	; 0x822 <__DATA_REGION_LENGTH__+0x22>
     82c:	3e f4       	brtc	.+14     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
     82e:	90 95       	com	r25
     830:	80 95       	com	r24
     832:	70 95       	com	r23
     834:	61 95       	neg	r22
     836:	7f 4f       	sbci	r23, 0xFF	; 255
     838:	8f 4f       	sbci	r24, 0xFF	; 255
     83a:	9f 4f       	sbci	r25, 0xFF	; 255
     83c:	08 95       	ret

0000083e <__floatunsisf>:
     83e:	e8 94       	clt
     840:	09 c0       	rjmp	.+18     	; 0x854 <__floatsisf+0x12>

00000842 <__floatsisf>:
     842:	97 fb       	bst	r25, 7
     844:	3e f4       	brtc	.+14     	; 0x854 <__floatsisf+0x12>
     846:	90 95       	com	r25
     848:	80 95       	com	r24
     84a:	70 95       	com	r23
     84c:	61 95       	neg	r22
     84e:	7f 4f       	sbci	r23, 0xFF	; 255
     850:	8f 4f       	sbci	r24, 0xFF	; 255
     852:	9f 4f       	sbci	r25, 0xFF	; 255
     854:	99 23       	and	r25, r25
     856:	a9 f0       	breq	.+42     	; 0x882 <__floatsisf+0x40>
     858:	f9 2f       	mov	r31, r25
     85a:	96 e9       	ldi	r25, 0x96	; 150
     85c:	bb 27       	eor	r27, r27
     85e:	93 95       	inc	r25
     860:	f6 95       	lsr	r31
     862:	87 95       	ror	r24
     864:	77 95       	ror	r23
     866:	67 95       	ror	r22
     868:	b7 95       	ror	r27
     86a:	f1 11       	cpse	r31, r1
     86c:	f8 cf       	rjmp	.-16     	; 0x85e <__floatsisf+0x1c>
     86e:	fa f4       	brpl	.+62     	; 0x8ae <__floatsisf+0x6c>
     870:	bb 0f       	add	r27, r27
     872:	11 f4       	brne	.+4      	; 0x878 <__floatsisf+0x36>
     874:	60 ff       	sbrs	r22, 0
     876:	1b c0       	rjmp	.+54     	; 0x8ae <__floatsisf+0x6c>
     878:	6f 5f       	subi	r22, 0xFF	; 255
     87a:	7f 4f       	sbci	r23, 0xFF	; 255
     87c:	8f 4f       	sbci	r24, 0xFF	; 255
     87e:	9f 4f       	sbci	r25, 0xFF	; 255
     880:	16 c0       	rjmp	.+44     	; 0x8ae <__floatsisf+0x6c>
     882:	88 23       	and	r24, r24
     884:	11 f0       	breq	.+4      	; 0x88a <__floatsisf+0x48>
     886:	96 e9       	ldi	r25, 0x96	; 150
     888:	11 c0       	rjmp	.+34     	; 0x8ac <__floatsisf+0x6a>
     88a:	77 23       	and	r23, r23
     88c:	21 f0       	breq	.+8      	; 0x896 <__floatsisf+0x54>
     88e:	9e e8       	ldi	r25, 0x8E	; 142
     890:	87 2f       	mov	r24, r23
     892:	76 2f       	mov	r23, r22
     894:	05 c0       	rjmp	.+10     	; 0x8a0 <__floatsisf+0x5e>
     896:	66 23       	and	r22, r22
     898:	71 f0       	breq	.+28     	; 0x8b6 <__floatsisf+0x74>
     89a:	96 e8       	ldi	r25, 0x86	; 134
     89c:	86 2f       	mov	r24, r22
     89e:	70 e0       	ldi	r23, 0x00	; 0
     8a0:	60 e0       	ldi	r22, 0x00	; 0
     8a2:	2a f0       	brmi	.+10     	; 0x8ae <__floatsisf+0x6c>
     8a4:	9a 95       	dec	r25
     8a6:	66 0f       	add	r22, r22
     8a8:	77 1f       	adc	r23, r23
     8aa:	88 1f       	adc	r24, r24
     8ac:	da f7       	brpl	.-10     	; 0x8a4 <__floatsisf+0x62>
     8ae:	88 0f       	add	r24, r24
     8b0:	96 95       	lsr	r25
     8b2:	87 95       	ror	r24
     8b4:	97 f9       	bld	r25, 7
     8b6:	08 95       	ret

000008b8 <__fp_split3>:
     8b8:	57 fd       	sbrc	r21, 7
     8ba:	90 58       	subi	r25, 0x80	; 128
     8bc:	44 0f       	add	r20, r20
     8be:	55 1f       	adc	r21, r21
     8c0:	59 f0       	breq	.+22     	; 0x8d8 <__fp_splitA+0x10>
     8c2:	5f 3f       	cpi	r21, 0xFF	; 255
     8c4:	71 f0       	breq	.+28     	; 0x8e2 <__fp_splitA+0x1a>
     8c6:	47 95       	ror	r20

000008c8 <__fp_splitA>:
     8c8:	88 0f       	add	r24, r24
     8ca:	97 fb       	bst	r25, 7
     8cc:	99 1f       	adc	r25, r25
     8ce:	61 f0       	breq	.+24     	; 0x8e8 <__fp_splitA+0x20>
     8d0:	9f 3f       	cpi	r25, 0xFF	; 255
     8d2:	79 f0       	breq	.+30     	; 0x8f2 <__fp_splitA+0x2a>
     8d4:	87 95       	ror	r24
     8d6:	08 95       	ret
     8d8:	12 16       	cp	r1, r18
     8da:	13 06       	cpc	r1, r19
     8dc:	14 06       	cpc	r1, r20
     8de:	55 1f       	adc	r21, r21
     8e0:	f2 cf       	rjmp	.-28     	; 0x8c6 <__fp_split3+0xe>
     8e2:	46 95       	lsr	r20
     8e4:	f1 df       	rcall	.-30     	; 0x8c8 <__fp_splitA>
     8e6:	08 c0       	rjmp	.+16     	; 0x8f8 <__fp_splitA+0x30>
     8e8:	16 16       	cp	r1, r22
     8ea:	17 06       	cpc	r1, r23
     8ec:	18 06       	cpc	r1, r24
     8ee:	99 1f       	adc	r25, r25
     8f0:	f1 cf       	rjmp	.-30     	; 0x8d4 <__fp_splitA+0xc>
     8f2:	86 95       	lsr	r24
     8f4:	71 05       	cpc	r23, r1
     8f6:	61 05       	cpc	r22, r1
     8f8:	08 94       	sec
     8fa:	08 95       	ret

000008fc <__fp_zero>:
     8fc:	e8 94       	clt

000008fe <__fp_szero>:
     8fe:	bb 27       	eor	r27, r27
     900:	66 27       	eor	r22, r22
     902:	77 27       	eor	r23, r23
     904:	cb 01       	movw	r24, r22
     906:	97 f9       	bld	r25, 7
     908:	08 95       	ret

0000090a <__mulsf3>:
     90a:	0e 94 98 04 	call	0x930	; 0x930 <__mulsf3x>
     90e:	0c 94 09 05 	jmp	0xa12	; 0xa12 <__fp_round>
     912:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <__fp_pscA>
     916:	38 f0       	brcs	.+14     	; 0x926 <__mulsf3+0x1c>
     918:	0e 94 02 05 	call	0xa04	; 0xa04 <__fp_pscB>
     91c:	20 f0       	brcs	.+8      	; 0x926 <__mulsf3+0x1c>
     91e:	95 23       	and	r25, r21
     920:	11 f0       	breq	.+4      	; 0x926 <__mulsf3+0x1c>
     922:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__fp_inf>
     926:	0c 94 f8 04 	jmp	0x9f0	; 0x9f0 <__fp_nan>
     92a:	11 24       	eor	r1, r1
     92c:	0c 94 7f 04 	jmp	0x8fe	; 0x8fe <__fp_szero>

00000930 <__mulsf3x>:
     930:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fp_split3>
     934:	70 f3       	brcs	.-36     	; 0x912 <__mulsf3+0x8>

00000936 <__mulsf3_pse>:
     936:	95 9f       	mul	r25, r21
     938:	c1 f3       	breq	.-16     	; 0x92a <__mulsf3+0x20>
     93a:	95 0f       	add	r25, r21
     93c:	50 e0       	ldi	r21, 0x00	; 0
     93e:	55 1f       	adc	r21, r21
     940:	62 9f       	mul	r22, r18
     942:	f0 01       	movw	r30, r0
     944:	72 9f       	mul	r23, r18
     946:	bb 27       	eor	r27, r27
     948:	f0 0d       	add	r31, r0
     94a:	b1 1d       	adc	r27, r1
     94c:	63 9f       	mul	r22, r19
     94e:	aa 27       	eor	r26, r26
     950:	f0 0d       	add	r31, r0
     952:	b1 1d       	adc	r27, r1
     954:	aa 1f       	adc	r26, r26
     956:	64 9f       	mul	r22, r20
     958:	66 27       	eor	r22, r22
     95a:	b0 0d       	add	r27, r0
     95c:	a1 1d       	adc	r26, r1
     95e:	66 1f       	adc	r22, r22
     960:	82 9f       	mul	r24, r18
     962:	22 27       	eor	r18, r18
     964:	b0 0d       	add	r27, r0
     966:	a1 1d       	adc	r26, r1
     968:	62 1f       	adc	r22, r18
     96a:	73 9f       	mul	r23, r19
     96c:	b0 0d       	add	r27, r0
     96e:	a1 1d       	adc	r26, r1
     970:	62 1f       	adc	r22, r18
     972:	83 9f       	mul	r24, r19
     974:	a0 0d       	add	r26, r0
     976:	61 1d       	adc	r22, r1
     978:	22 1f       	adc	r18, r18
     97a:	74 9f       	mul	r23, r20
     97c:	33 27       	eor	r19, r19
     97e:	a0 0d       	add	r26, r0
     980:	61 1d       	adc	r22, r1
     982:	23 1f       	adc	r18, r19
     984:	84 9f       	mul	r24, r20
     986:	60 0d       	add	r22, r0
     988:	21 1d       	adc	r18, r1
     98a:	82 2f       	mov	r24, r18
     98c:	76 2f       	mov	r23, r22
     98e:	6a 2f       	mov	r22, r26
     990:	11 24       	eor	r1, r1
     992:	9f 57       	subi	r25, 0x7F	; 127
     994:	50 40       	sbci	r21, 0x00	; 0
     996:	9a f0       	brmi	.+38     	; 0x9be <__mulsf3_pse+0x88>
     998:	f1 f0       	breq	.+60     	; 0x9d6 <__mulsf3_pse+0xa0>
     99a:	88 23       	and	r24, r24
     99c:	4a f0       	brmi	.+18     	; 0x9b0 <__mulsf3_pse+0x7a>
     99e:	ee 0f       	add	r30, r30
     9a0:	ff 1f       	adc	r31, r31
     9a2:	bb 1f       	adc	r27, r27
     9a4:	66 1f       	adc	r22, r22
     9a6:	77 1f       	adc	r23, r23
     9a8:	88 1f       	adc	r24, r24
     9aa:	91 50       	subi	r25, 0x01	; 1
     9ac:	50 40       	sbci	r21, 0x00	; 0
     9ae:	a9 f7       	brne	.-22     	; 0x99a <__mulsf3_pse+0x64>
     9b0:	9e 3f       	cpi	r25, 0xFE	; 254
     9b2:	51 05       	cpc	r21, r1
     9b4:	80 f0       	brcs	.+32     	; 0x9d6 <__mulsf3_pse+0xa0>
     9b6:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__fp_inf>
     9ba:	0c 94 7f 04 	jmp	0x8fe	; 0x8fe <__fp_szero>
     9be:	5f 3f       	cpi	r21, 0xFF	; 255
     9c0:	e4 f3       	brlt	.-8      	; 0x9ba <__mulsf3_pse+0x84>
     9c2:	98 3e       	cpi	r25, 0xE8	; 232
     9c4:	d4 f3       	brlt	.-12     	; 0x9ba <__mulsf3_pse+0x84>
     9c6:	86 95       	lsr	r24
     9c8:	77 95       	ror	r23
     9ca:	67 95       	ror	r22
     9cc:	b7 95       	ror	r27
     9ce:	f7 95       	ror	r31
     9d0:	e7 95       	ror	r30
     9d2:	9f 5f       	subi	r25, 0xFF	; 255
     9d4:	c1 f7       	brne	.-16     	; 0x9c6 <__mulsf3_pse+0x90>
     9d6:	fe 2b       	or	r31, r30
     9d8:	88 0f       	add	r24, r24
     9da:	91 1d       	adc	r25, r1
     9dc:	96 95       	lsr	r25
     9de:	87 95       	ror	r24
     9e0:	97 f9       	bld	r25, 7
     9e2:	08 95       	ret

000009e4 <__fp_inf>:
     9e4:	97 f9       	bld	r25, 7
     9e6:	9f 67       	ori	r25, 0x7F	; 127
     9e8:	80 e8       	ldi	r24, 0x80	; 128
     9ea:	70 e0       	ldi	r23, 0x00	; 0
     9ec:	60 e0       	ldi	r22, 0x00	; 0
     9ee:	08 95       	ret

000009f0 <__fp_nan>:
     9f0:	9f ef       	ldi	r25, 0xFF	; 255
     9f2:	80 ec       	ldi	r24, 0xC0	; 192
     9f4:	08 95       	ret

000009f6 <__fp_pscA>:
     9f6:	00 24       	eor	r0, r0
     9f8:	0a 94       	dec	r0
     9fa:	16 16       	cp	r1, r22
     9fc:	17 06       	cpc	r1, r23
     9fe:	18 06       	cpc	r1, r24
     a00:	09 06       	cpc	r0, r25
     a02:	08 95       	ret

00000a04 <__fp_pscB>:
     a04:	00 24       	eor	r0, r0
     a06:	0a 94       	dec	r0
     a08:	12 16       	cp	r1, r18
     a0a:	13 06       	cpc	r1, r19
     a0c:	14 06       	cpc	r1, r20
     a0e:	05 06       	cpc	r0, r21
     a10:	08 95       	ret

00000a12 <__fp_round>:
     a12:	09 2e       	mov	r0, r25
     a14:	03 94       	inc	r0
     a16:	00 0c       	add	r0, r0
     a18:	11 f4       	brne	.+4      	; 0xa1e <__fp_round+0xc>
     a1a:	88 23       	and	r24, r24
     a1c:	52 f0       	brmi	.+20     	; 0xa32 <__fp_round+0x20>
     a1e:	bb 0f       	add	r27, r27
     a20:	40 f4       	brcc	.+16     	; 0xa32 <__fp_round+0x20>
     a22:	bf 2b       	or	r27, r31
     a24:	11 f4       	brne	.+4      	; 0xa2a <__fp_round+0x18>
     a26:	60 ff       	sbrs	r22, 0
     a28:	04 c0       	rjmp	.+8      	; 0xa32 <__fp_round+0x20>
     a2a:	6f 5f       	subi	r22, 0xFF	; 255
     a2c:	7f 4f       	sbci	r23, 0xFF	; 255
     a2e:	8f 4f       	sbci	r24, 0xFF	; 255
     a30:	9f 4f       	sbci	r25, 0xFF	; 255
     a32:	08 95       	ret

00000a34 <dtostrf>:
     a34:	ef 92       	push	r14
     a36:	0f 93       	push	r16
     a38:	1f 93       	push	r17
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	e8 01       	movw	r28, r16
     a40:	47 fd       	sbrc	r20, 7
     a42:	02 c0       	rjmp	.+4      	; 0xa48 <dtostrf+0x14>
     a44:	34 e0       	ldi	r19, 0x04	; 4
     a46:	01 c0       	rjmp	.+2      	; 0xa4a <dtostrf+0x16>
     a48:	34 e1       	ldi	r19, 0x14	; 20
     a4a:	04 2e       	mov	r0, r20
     a4c:	00 0c       	add	r0, r0
     a4e:	55 0b       	sbc	r21, r21
     a50:	57 ff       	sbrs	r21, 7
     a52:	03 c0       	rjmp	.+6      	; 0xa5a <dtostrf+0x26>
     a54:	51 95       	neg	r21
     a56:	41 95       	neg	r20
     a58:	51 09       	sbc	r21, r1
     a5a:	e3 2e       	mov	r14, r19
     a5c:	02 2f       	mov	r16, r18
     a5e:	24 2f       	mov	r18, r20
     a60:	ae 01       	movw	r20, r28
     a62:	0e 94 72 05 	call	0xae4	; 0xae4 <dtoa_prf>
     a66:	ce 01       	movw	r24, r28
     a68:	df 91       	pop	r29
     a6a:	cf 91       	pop	r28
     a6c:	1f 91       	pop	r17
     a6e:	0f 91       	pop	r16
     a70:	ef 90       	pop	r14
     a72:	08 95       	ret

00000a74 <atof>:
     a74:	66 27       	eor	r22, r22
     a76:	77 27       	eor	r23, r23
     a78:	0c 94 cc 06 	jmp	0xd98	; 0xd98 <strtod>

00000a7c <strncpy>:
     a7c:	fb 01       	movw	r30, r22
     a7e:	dc 01       	movw	r26, r24
     a80:	41 50       	subi	r20, 0x01	; 1
     a82:	50 40       	sbci	r21, 0x00	; 0
     a84:	48 f0       	brcs	.+18     	; 0xa98 <strncpy+0x1c>
     a86:	01 90       	ld	r0, Z+
     a88:	0d 92       	st	X+, r0
     a8a:	00 20       	and	r0, r0
     a8c:	c9 f7       	brne	.-14     	; 0xa80 <strncpy+0x4>
     a8e:	01 c0       	rjmp	.+2      	; 0xa92 <strncpy+0x16>
     a90:	1d 92       	st	X+, r1
     a92:	41 50       	subi	r20, 0x01	; 1
     a94:	50 40       	sbci	r21, 0x00	; 0
     a96:	e0 f7       	brcc	.-8      	; 0xa90 <strncpy+0x14>
     a98:	08 95       	ret

00000a9a <__itoa_ncheck>:
     a9a:	bb 27       	eor	r27, r27
     a9c:	4a 30       	cpi	r20, 0x0A	; 10
     a9e:	31 f4       	brne	.+12     	; 0xaac <__itoa_ncheck+0x12>
     aa0:	99 23       	and	r25, r25
     aa2:	22 f4       	brpl	.+8      	; 0xaac <__itoa_ncheck+0x12>
     aa4:	bd e2       	ldi	r27, 0x2D	; 45
     aa6:	90 95       	com	r25
     aa8:	81 95       	neg	r24
     aaa:	9f 4f       	sbci	r25, 0xFF	; 255
     aac:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__utoa_common>

00000ab0 <__utoa_ncheck>:
     ab0:	bb 27       	eor	r27, r27

00000ab2 <__utoa_common>:
     ab2:	fb 01       	movw	r30, r22
     ab4:	55 27       	eor	r21, r21
     ab6:	aa 27       	eor	r26, r26
     ab8:	88 0f       	add	r24, r24
     aba:	99 1f       	adc	r25, r25
     abc:	aa 1f       	adc	r26, r26
     abe:	a4 17       	cp	r26, r20
     ac0:	10 f0       	brcs	.+4      	; 0xac6 <__utoa_common+0x14>
     ac2:	a4 1b       	sub	r26, r20
     ac4:	83 95       	inc	r24
     ac6:	50 51       	subi	r21, 0x10	; 16
     ac8:	b9 f7       	brne	.-18     	; 0xab8 <__utoa_common+0x6>
     aca:	a0 5d       	subi	r26, 0xD0	; 208
     acc:	aa 33       	cpi	r26, 0x3A	; 58
     ace:	08 f0       	brcs	.+2      	; 0xad2 <__utoa_common+0x20>
     ad0:	a9 5d       	subi	r26, 0xD9	; 217
     ad2:	a1 93       	st	Z+, r26
     ad4:	00 97       	sbiw	r24, 0x00	; 0
     ad6:	79 f7       	brne	.-34     	; 0xab6 <__utoa_common+0x4>
     ad8:	b1 11       	cpse	r27, r1
     ada:	b1 93       	st	Z+, r27
     adc:	11 92       	st	Z+, r1
     ade:	cb 01       	movw	r24, r22
     ae0:	0c 94 13 09 	jmp	0x1226	; 0x1226 <strrev>

00000ae4 <dtoa_prf>:
     ae4:	a9 e0       	ldi	r26, 0x09	; 9
     ae6:	b0 e0       	ldi	r27, 0x00	; 0
     ae8:	e8 e7       	ldi	r30, 0x78	; 120
     aea:	f5 e0       	ldi	r31, 0x05	; 5
     aec:	0c 94 60 09 	jmp	0x12c0	; 0x12c0 <__prologue_saves__+0xc>
     af0:	6a 01       	movw	r12, r20
     af2:	12 2f       	mov	r17, r18
     af4:	b0 2e       	mov	r11, r16
     af6:	2b e3       	ldi	r18, 0x3B	; 59
     af8:	20 17       	cp	r18, r16
     afa:	20 f0       	brcs	.+8      	; 0xb04 <dtoa_prf+0x20>
     afc:	ff 24       	eor	r15, r15
     afe:	f3 94       	inc	r15
     b00:	f0 0e       	add	r15, r16
     b02:	02 c0       	rjmp	.+4      	; 0xb08 <dtoa_prf+0x24>
     b04:	2c e3       	ldi	r18, 0x3C	; 60
     b06:	f2 2e       	mov	r15, r18
     b08:	0f 2d       	mov	r16, r15
     b0a:	27 e0       	ldi	r18, 0x07	; 7
     b0c:	ae 01       	movw	r20, r28
     b0e:	4f 5f       	subi	r20, 0xFF	; 255
     b10:	5f 4f       	sbci	r21, 0xFF	; 255
     b12:	0e 94 1a 08 	call	0x1034	; 0x1034 <__ftoa_engine>
     b16:	bc 01       	movw	r22, r24
     b18:	49 81       	ldd	r20, Y+1	; 0x01
     b1a:	84 2f       	mov	r24, r20
     b1c:	89 70       	andi	r24, 0x09	; 9
     b1e:	81 30       	cpi	r24, 0x01	; 1
     b20:	31 f0       	breq	.+12     	; 0xb2e <dtoa_prf+0x4a>
     b22:	e1 fc       	sbrc	r14, 1
     b24:	06 c0       	rjmp	.+12     	; 0xb32 <dtoa_prf+0x4e>
     b26:	e0 fe       	sbrs	r14, 0
     b28:	06 c0       	rjmp	.+12     	; 0xb36 <dtoa_prf+0x52>
     b2a:	90 e2       	ldi	r25, 0x20	; 32
     b2c:	05 c0       	rjmp	.+10     	; 0xb38 <dtoa_prf+0x54>
     b2e:	9d e2       	ldi	r25, 0x2D	; 45
     b30:	03 c0       	rjmp	.+6      	; 0xb38 <dtoa_prf+0x54>
     b32:	9b e2       	ldi	r25, 0x2B	; 43
     b34:	01 c0       	rjmp	.+2      	; 0xb38 <dtoa_prf+0x54>
     b36:	90 e0       	ldi	r25, 0x00	; 0
     b38:	5e 2d       	mov	r21, r14
     b3a:	50 71       	andi	r21, 0x10	; 16
     b3c:	43 ff       	sbrs	r20, 3
     b3e:	3c c0       	rjmp	.+120    	; 0xbb8 <dtoa_prf+0xd4>
     b40:	91 11       	cpse	r25, r1
     b42:	02 c0       	rjmp	.+4      	; 0xb48 <dtoa_prf+0x64>
     b44:	83 e0       	ldi	r24, 0x03	; 3
     b46:	01 c0       	rjmp	.+2      	; 0xb4a <dtoa_prf+0x66>
     b48:	84 e0       	ldi	r24, 0x04	; 4
     b4a:	81 17       	cp	r24, r17
     b4c:	18 f4       	brcc	.+6      	; 0xb54 <dtoa_prf+0x70>
     b4e:	21 2f       	mov	r18, r17
     b50:	28 1b       	sub	r18, r24
     b52:	01 c0       	rjmp	.+2      	; 0xb56 <dtoa_prf+0x72>
     b54:	20 e0       	ldi	r18, 0x00	; 0
     b56:	51 11       	cpse	r21, r1
     b58:	0b c0       	rjmp	.+22     	; 0xb70 <dtoa_prf+0x8c>
     b5a:	f6 01       	movw	r30, r12
     b5c:	82 2f       	mov	r24, r18
     b5e:	30 e2       	ldi	r19, 0x20	; 32
     b60:	88 23       	and	r24, r24
     b62:	19 f0       	breq	.+6      	; 0xb6a <dtoa_prf+0x86>
     b64:	31 93       	st	Z+, r19
     b66:	81 50       	subi	r24, 0x01	; 1
     b68:	fb cf       	rjmp	.-10     	; 0xb60 <dtoa_prf+0x7c>
     b6a:	c2 0e       	add	r12, r18
     b6c:	d1 1c       	adc	r13, r1
     b6e:	20 e0       	ldi	r18, 0x00	; 0
     b70:	99 23       	and	r25, r25
     b72:	29 f0       	breq	.+10     	; 0xb7e <dtoa_prf+0x9a>
     b74:	d6 01       	movw	r26, r12
     b76:	9c 93       	st	X, r25
     b78:	f6 01       	movw	r30, r12
     b7a:	31 96       	adiw	r30, 0x01	; 1
     b7c:	6f 01       	movw	r12, r30
     b7e:	c6 01       	movw	r24, r12
     b80:	03 96       	adiw	r24, 0x03	; 3
     b82:	e2 fe       	sbrs	r14, 2
     b84:	0a c0       	rjmp	.+20     	; 0xb9a <dtoa_prf+0xb6>
     b86:	3e e4       	ldi	r19, 0x4E	; 78
     b88:	d6 01       	movw	r26, r12
     b8a:	3c 93       	st	X, r19
     b8c:	41 e4       	ldi	r20, 0x41	; 65
     b8e:	11 96       	adiw	r26, 0x01	; 1
     b90:	4c 93       	st	X, r20
     b92:	11 97       	sbiw	r26, 0x01	; 1
     b94:	12 96       	adiw	r26, 0x02	; 2
     b96:	3c 93       	st	X, r19
     b98:	06 c0       	rjmp	.+12     	; 0xba6 <dtoa_prf+0xc2>
     b9a:	3e e6       	ldi	r19, 0x6E	; 110
     b9c:	f6 01       	movw	r30, r12
     b9e:	30 83       	st	Z, r19
     ba0:	41 e6       	ldi	r20, 0x61	; 97
     ba2:	41 83       	std	Z+1, r20	; 0x01
     ba4:	32 83       	std	Z+2, r19	; 0x02
     ba6:	fc 01       	movw	r30, r24
     ba8:	32 2f       	mov	r19, r18
     baa:	40 e2       	ldi	r20, 0x20	; 32
     bac:	33 23       	and	r19, r19
     bae:	09 f4       	brne	.+2      	; 0xbb2 <dtoa_prf+0xce>
     bb0:	42 c0       	rjmp	.+132    	; 0xc36 <dtoa_prf+0x152>
     bb2:	41 93       	st	Z+, r20
     bb4:	31 50       	subi	r19, 0x01	; 1
     bb6:	fa cf       	rjmp	.-12     	; 0xbac <dtoa_prf+0xc8>
     bb8:	42 ff       	sbrs	r20, 2
     bba:	44 c0       	rjmp	.+136    	; 0xc44 <dtoa_prf+0x160>
     bbc:	91 11       	cpse	r25, r1
     bbe:	02 c0       	rjmp	.+4      	; 0xbc4 <dtoa_prf+0xe0>
     bc0:	83 e0       	ldi	r24, 0x03	; 3
     bc2:	01 c0       	rjmp	.+2      	; 0xbc6 <dtoa_prf+0xe2>
     bc4:	84 e0       	ldi	r24, 0x04	; 4
     bc6:	81 17       	cp	r24, r17
     bc8:	18 f4       	brcc	.+6      	; 0xbd0 <dtoa_prf+0xec>
     bca:	21 2f       	mov	r18, r17
     bcc:	28 1b       	sub	r18, r24
     bce:	01 c0       	rjmp	.+2      	; 0xbd2 <dtoa_prf+0xee>
     bd0:	20 e0       	ldi	r18, 0x00	; 0
     bd2:	51 11       	cpse	r21, r1
     bd4:	0b c0       	rjmp	.+22     	; 0xbec <dtoa_prf+0x108>
     bd6:	f6 01       	movw	r30, r12
     bd8:	82 2f       	mov	r24, r18
     bda:	30 e2       	ldi	r19, 0x20	; 32
     bdc:	88 23       	and	r24, r24
     bde:	19 f0       	breq	.+6      	; 0xbe6 <dtoa_prf+0x102>
     be0:	31 93       	st	Z+, r19
     be2:	81 50       	subi	r24, 0x01	; 1
     be4:	fb cf       	rjmp	.-10     	; 0xbdc <dtoa_prf+0xf8>
     be6:	c2 0e       	add	r12, r18
     be8:	d1 1c       	adc	r13, r1
     bea:	20 e0       	ldi	r18, 0x00	; 0
     bec:	99 23       	and	r25, r25
     bee:	29 f0       	breq	.+10     	; 0xbfa <dtoa_prf+0x116>
     bf0:	d6 01       	movw	r26, r12
     bf2:	9c 93       	st	X, r25
     bf4:	f6 01       	movw	r30, r12
     bf6:	31 96       	adiw	r30, 0x01	; 1
     bf8:	6f 01       	movw	r12, r30
     bfa:	c6 01       	movw	r24, r12
     bfc:	03 96       	adiw	r24, 0x03	; 3
     bfe:	e2 fe       	sbrs	r14, 2
     c00:	0b c0       	rjmp	.+22     	; 0xc18 <dtoa_prf+0x134>
     c02:	39 e4       	ldi	r19, 0x49	; 73
     c04:	d6 01       	movw	r26, r12
     c06:	3c 93       	st	X, r19
     c08:	3e e4       	ldi	r19, 0x4E	; 78
     c0a:	11 96       	adiw	r26, 0x01	; 1
     c0c:	3c 93       	st	X, r19
     c0e:	11 97       	sbiw	r26, 0x01	; 1
     c10:	36 e4       	ldi	r19, 0x46	; 70
     c12:	12 96       	adiw	r26, 0x02	; 2
     c14:	3c 93       	st	X, r19
     c16:	07 c0       	rjmp	.+14     	; 0xc26 <dtoa_prf+0x142>
     c18:	39 e6       	ldi	r19, 0x69	; 105
     c1a:	f6 01       	movw	r30, r12
     c1c:	30 83       	st	Z, r19
     c1e:	3e e6       	ldi	r19, 0x6E	; 110
     c20:	31 83       	std	Z+1, r19	; 0x01
     c22:	36 e6       	ldi	r19, 0x66	; 102
     c24:	32 83       	std	Z+2, r19	; 0x02
     c26:	fc 01       	movw	r30, r24
     c28:	32 2f       	mov	r19, r18
     c2a:	40 e2       	ldi	r20, 0x20	; 32
     c2c:	33 23       	and	r19, r19
     c2e:	19 f0       	breq	.+6      	; 0xc36 <dtoa_prf+0x152>
     c30:	41 93       	st	Z+, r20
     c32:	31 50       	subi	r19, 0x01	; 1
     c34:	fb cf       	rjmp	.-10     	; 0xc2c <dtoa_prf+0x148>
     c36:	fc 01       	movw	r30, r24
     c38:	e2 0f       	add	r30, r18
     c3a:	f1 1d       	adc	r31, r1
     c3c:	10 82       	st	Z, r1
     c3e:	8e ef       	ldi	r24, 0xFE	; 254
     c40:	9f ef       	ldi	r25, 0xFF	; 255
     c42:	a6 c0       	rjmp	.+332    	; 0xd90 <dtoa_prf+0x2ac>
     c44:	21 e0       	ldi	r18, 0x01	; 1
     c46:	30 e0       	ldi	r19, 0x00	; 0
     c48:	91 11       	cpse	r25, r1
     c4a:	02 c0       	rjmp	.+4      	; 0xc50 <dtoa_prf+0x16c>
     c4c:	20 e0       	ldi	r18, 0x00	; 0
     c4e:	30 e0       	ldi	r19, 0x00	; 0
     c50:	16 16       	cp	r1, r22
     c52:	17 06       	cpc	r1, r23
     c54:	1c f4       	brge	.+6      	; 0xc5c <dtoa_prf+0x178>
     c56:	fb 01       	movw	r30, r22
     c58:	31 96       	adiw	r30, 0x01	; 1
     c5a:	02 c0       	rjmp	.+4      	; 0xc60 <dtoa_prf+0x17c>
     c5c:	e1 e0       	ldi	r30, 0x01	; 1
     c5e:	f0 e0       	ldi	r31, 0x00	; 0
     c60:	2e 0f       	add	r18, r30
     c62:	3f 1f       	adc	r19, r31
     c64:	bb 20       	and	r11, r11
     c66:	21 f0       	breq	.+8      	; 0xc70 <dtoa_prf+0x18c>
     c68:	eb 2d       	mov	r30, r11
     c6a:	f0 e0       	ldi	r31, 0x00	; 0
     c6c:	31 96       	adiw	r30, 0x01	; 1
     c6e:	02 c0       	rjmp	.+4      	; 0xc74 <dtoa_prf+0x190>
     c70:	e0 e0       	ldi	r30, 0x00	; 0
     c72:	f0 e0       	ldi	r31, 0x00	; 0
     c74:	2e 0f       	add	r18, r30
     c76:	3f 1f       	adc	r19, r31
     c78:	e1 2f       	mov	r30, r17
     c7a:	f0 e0       	ldi	r31, 0x00	; 0
     c7c:	2e 17       	cp	r18, r30
     c7e:	3f 07       	cpc	r19, r31
     c80:	1c f4       	brge	.+6      	; 0xc88 <dtoa_prf+0x1a4>
     c82:	12 1b       	sub	r17, r18
     c84:	21 2f       	mov	r18, r17
     c86:	01 c0       	rjmp	.+2      	; 0xc8a <dtoa_prf+0x1a6>
     c88:	20 e0       	ldi	r18, 0x00	; 0
     c8a:	8e 2d       	mov	r24, r14
     c8c:	88 71       	andi	r24, 0x18	; 24
     c8e:	59 f4       	brne	.+22     	; 0xca6 <dtoa_prf+0x1c2>
     c90:	f6 01       	movw	r30, r12
     c92:	82 2f       	mov	r24, r18
     c94:	30 e2       	ldi	r19, 0x20	; 32
     c96:	88 23       	and	r24, r24
     c98:	19 f0       	breq	.+6      	; 0xca0 <dtoa_prf+0x1bc>
     c9a:	31 93       	st	Z+, r19
     c9c:	81 50       	subi	r24, 0x01	; 1
     c9e:	fb cf       	rjmp	.-10     	; 0xc96 <dtoa_prf+0x1b2>
     ca0:	c2 0e       	add	r12, r18
     ca2:	d1 1c       	adc	r13, r1
     ca4:	20 e0       	ldi	r18, 0x00	; 0
     ca6:	99 23       	and	r25, r25
     ca8:	29 f0       	breq	.+10     	; 0xcb4 <dtoa_prf+0x1d0>
     caa:	d6 01       	movw	r26, r12
     cac:	9c 93       	st	X, r25
     cae:	f6 01       	movw	r30, r12
     cb0:	31 96       	adiw	r30, 0x01	; 1
     cb2:	6f 01       	movw	r12, r30
     cb4:	51 11       	cpse	r21, r1
     cb6:	0b c0       	rjmp	.+22     	; 0xcce <dtoa_prf+0x1ea>
     cb8:	f6 01       	movw	r30, r12
     cba:	82 2f       	mov	r24, r18
     cbc:	90 e3       	ldi	r25, 0x30	; 48
     cbe:	88 23       	and	r24, r24
     cc0:	19 f0       	breq	.+6      	; 0xcc8 <dtoa_prf+0x1e4>
     cc2:	91 93       	st	Z+, r25
     cc4:	81 50       	subi	r24, 0x01	; 1
     cc6:	fb cf       	rjmp	.-10     	; 0xcbe <dtoa_prf+0x1da>
     cc8:	c2 0e       	add	r12, r18
     cca:	d1 1c       	adc	r13, r1
     ccc:	20 e0       	ldi	r18, 0x00	; 0
     cce:	0f 2d       	mov	r16, r15
     cd0:	06 0f       	add	r16, r22
     cd2:	9a 81       	ldd	r25, Y+2	; 0x02
     cd4:	34 2f       	mov	r19, r20
     cd6:	30 71       	andi	r19, 0x10	; 16
     cd8:	44 ff       	sbrs	r20, 4
     cda:	03 c0       	rjmp	.+6      	; 0xce2 <dtoa_prf+0x1fe>
     cdc:	91 33       	cpi	r25, 0x31	; 49
     cde:	09 f4       	brne	.+2      	; 0xce2 <dtoa_prf+0x1fe>
     ce0:	01 50       	subi	r16, 0x01	; 1
     ce2:	10 16       	cp	r1, r16
     ce4:	24 f4       	brge	.+8      	; 0xcee <dtoa_prf+0x20a>
     ce6:	09 30       	cpi	r16, 0x09	; 9
     ce8:	18 f0       	brcs	.+6      	; 0xcf0 <dtoa_prf+0x20c>
     cea:	08 e0       	ldi	r16, 0x08	; 8
     cec:	01 c0       	rjmp	.+2      	; 0xcf0 <dtoa_prf+0x20c>
     cee:	01 e0       	ldi	r16, 0x01	; 1
     cf0:	ab 01       	movw	r20, r22
     cf2:	77 ff       	sbrs	r23, 7
     cf4:	02 c0       	rjmp	.+4      	; 0xcfa <dtoa_prf+0x216>
     cf6:	40 e0       	ldi	r20, 0x00	; 0
     cf8:	50 e0       	ldi	r21, 0x00	; 0
     cfa:	fb 01       	movw	r30, r22
     cfc:	e4 1b       	sub	r30, r20
     cfe:	f5 0b       	sbc	r31, r21
     d00:	a1 e0       	ldi	r26, 0x01	; 1
     d02:	b0 e0       	ldi	r27, 0x00	; 0
     d04:	ac 0f       	add	r26, r28
     d06:	bd 1f       	adc	r27, r29
     d08:	ea 0f       	add	r30, r26
     d0a:	fb 1f       	adc	r31, r27
     d0c:	8e e2       	ldi	r24, 0x2E	; 46
     d0e:	a8 2e       	mov	r10, r24
     d10:	4b 01       	movw	r8, r22
     d12:	80 1a       	sub	r8, r16
     d14:	91 08       	sbc	r9, r1
     d16:	0b 2d       	mov	r16, r11
     d18:	10 e0       	ldi	r17, 0x00	; 0
     d1a:	11 95       	neg	r17
     d1c:	01 95       	neg	r16
     d1e:	11 09       	sbc	r17, r1
     d20:	4f 3f       	cpi	r20, 0xFF	; 255
     d22:	bf ef       	ldi	r27, 0xFF	; 255
     d24:	5b 07       	cpc	r21, r27
     d26:	21 f4       	brne	.+8      	; 0xd30 <dtoa_prf+0x24c>
     d28:	d6 01       	movw	r26, r12
     d2a:	ac 92       	st	X, r10
     d2c:	11 96       	adiw	r26, 0x01	; 1
     d2e:	6d 01       	movw	r12, r26
     d30:	64 17       	cp	r22, r20
     d32:	75 07       	cpc	r23, r21
     d34:	2c f0       	brlt	.+10     	; 0xd40 <dtoa_prf+0x25c>
     d36:	84 16       	cp	r8, r20
     d38:	95 06       	cpc	r9, r21
     d3a:	14 f4       	brge	.+4      	; 0xd40 <dtoa_prf+0x25c>
     d3c:	81 81       	ldd	r24, Z+1	; 0x01
     d3e:	01 c0       	rjmp	.+2      	; 0xd42 <dtoa_prf+0x25e>
     d40:	80 e3       	ldi	r24, 0x30	; 48
     d42:	41 50       	subi	r20, 0x01	; 1
     d44:	51 09       	sbc	r21, r1
     d46:	31 96       	adiw	r30, 0x01	; 1
     d48:	d6 01       	movw	r26, r12
     d4a:	11 96       	adiw	r26, 0x01	; 1
     d4c:	7d 01       	movw	r14, r26
     d4e:	40 17       	cp	r20, r16
     d50:	51 07       	cpc	r21, r17
     d52:	24 f0       	brlt	.+8      	; 0xd5c <dtoa_prf+0x278>
     d54:	d6 01       	movw	r26, r12
     d56:	8c 93       	st	X, r24
     d58:	67 01       	movw	r12, r14
     d5a:	e2 cf       	rjmp	.-60     	; 0xd20 <dtoa_prf+0x23c>
     d5c:	64 17       	cp	r22, r20
     d5e:	75 07       	cpc	r23, r21
     d60:	39 f4       	brne	.+14     	; 0xd70 <dtoa_prf+0x28c>
     d62:	96 33       	cpi	r25, 0x36	; 54
     d64:	20 f4       	brcc	.+8      	; 0xd6e <dtoa_prf+0x28a>
     d66:	95 33       	cpi	r25, 0x35	; 53
     d68:	19 f4       	brne	.+6      	; 0xd70 <dtoa_prf+0x28c>
     d6a:	31 11       	cpse	r19, r1
     d6c:	01 c0       	rjmp	.+2      	; 0xd70 <dtoa_prf+0x28c>
     d6e:	81 e3       	ldi	r24, 0x31	; 49
     d70:	f6 01       	movw	r30, r12
     d72:	80 83       	st	Z, r24
     d74:	f7 01       	movw	r30, r14
     d76:	82 2f       	mov	r24, r18
     d78:	90 e2       	ldi	r25, 0x20	; 32
     d7a:	88 23       	and	r24, r24
     d7c:	19 f0       	breq	.+6      	; 0xd84 <dtoa_prf+0x2a0>
     d7e:	91 93       	st	Z+, r25
     d80:	81 50       	subi	r24, 0x01	; 1
     d82:	fb cf       	rjmp	.-10     	; 0xd7a <dtoa_prf+0x296>
     d84:	f7 01       	movw	r30, r14
     d86:	e2 0f       	add	r30, r18
     d88:	f1 1d       	adc	r31, r1
     d8a:	10 82       	st	Z, r1
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	90 e0       	ldi	r25, 0x00	; 0
     d90:	29 96       	adiw	r28, 0x09	; 9
     d92:	ec e0       	ldi	r30, 0x0C	; 12
     d94:	0c 94 7c 09 	jmp	0x12f8	; 0x12f8 <__epilogue_restores__+0xc>

00000d98 <strtod>:
     d98:	a0 e0       	ldi	r26, 0x00	; 0
     d9a:	b0 e0       	ldi	r27, 0x00	; 0
     d9c:	e2 ed       	ldi	r30, 0xD2	; 210
     d9e:	f6 e0       	ldi	r31, 0x06	; 6
     da0:	0c 94 60 09 	jmp	0x12c0	; 0x12c0 <__prologue_saves__+0xc>
     da4:	ec 01       	movw	r28, r24
     da6:	6b 01       	movw	r12, r22
     da8:	61 15       	cp	r22, r1
     daa:	71 05       	cpc	r23, r1
     dac:	19 f0       	breq	.+6      	; 0xdb4 <strtod+0x1c>
     dae:	fb 01       	movw	r30, r22
     db0:	91 83       	std	Z+1, r25	; 0x01
     db2:	80 83       	st	Z, r24
     db4:	7e 01       	movw	r14, r28
     db6:	ff ef       	ldi	r31, 0xFF	; 255
     db8:	ef 1a       	sub	r14, r31
     dba:	ff 0a       	sbc	r15, r31
     dbc:	08 81       	ld	r16, Y
     dbe:	80 2f       	mov	r24, r16
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <isspace>
     dc6:	89 2b       	or	r24, r25
     dc8:	11 f0       	breq	.+4      	; 0xdce <strtod+0x36>
     dca:	e7 01       	movw	r28, r14
     dcc:	f3 cf       	rjmp	.-26     	; 0xdb4 <strtod+0x1c>
     dce:	0d 32       	cpi	r16, 0x2D	; 45
     dd0:	39 f4       	brne	.+14     	; 0xde0 <strtod+0x48>
     dd2:	7e 01       	movw	r14, r28
     dd4:	82 e0       	ldi	r24, 0x02	; 2
     dd6:	e8 0e       	add	r14, r24
     dd8:	f1 1c       	adc	r15, r1
     dda:	09 81       	ldd	r16, Y+1	; 0x01
     ddc:	11 e0       	ldi	r17, 0x01	; 1
     dde:	08 c0       	rjmp	.+16     	; 0xdf0 <strtod+0x58>
     de0:	0b 32       	cpi	r16, 0x2B	; 43
     de2:	29 f4       	brne	.+10     	; 0xdee <strtod+0x56>
     de4:	7e 01       	movw	r14, r28
     de6:	92 e0       	ldi	r25, 0x02	; 2
     de8:	e9 0e       	add	r14, r25
     dea:	f1 1c       	adc	r15, r1
     dec:	09 81       	ldd	r16, Y+1	; 0x01
     dee:	10 e0       	ldi	r17, 0x00	; 0
     df0:	e7 01       	movw	r28, r14
     df2:	21 97       	sbiw	r28, 0x01	; 1
     df4:	43 e0       	ldi	r20, 0x03	; 3
     df6:	50 e0       	ldi	r21, 0x00	; 0
     df8:	60 e7       	ldi	r22, 0x70	; 112
     dfa:	70 e0       	ldi	r23, 0x00	; 0
     dfc:	ce 01       	movw	r24, r28
     dfe:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <strncasecmp_P>
     e02:	89 2b       	or	r24, r25
     e04:	c1 f4       	brne	.+48     	; 0xe36 <strtod+0x9e>
     e06:	23 96       	adiw	r28, 0x03	; 3
     e08:	45 e0       	ldi	r20, 0x05	; 5
     e0a:	50 e0       	ldi	r21, 0x00	; 0
     e0c:	6b e6       	ldi	r22, 0x6B	; 107
     e0e:	70 e0       	ldi	r23, 0x00	; 0
     e10:	ce 01       	movw	r24, r28
     e12:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <strncasecmp_P>
     e16:	89 2b       	or	r24, r25
     e18:	09 f4       	brne	.+2      	; 0xe1c <strtod+0x84>
     e1a:	25 96       	adiw	r28, 0x05	; 5
     e1c:	c1 14       	cp	r12, r1
     e1e:	d1 04       	cpc	r13, r1
     e20:	19 f0       	breq	.+6      	; 0xe28 <strtod+0x90>
     e22:	f6 01       	movw	r30, r12
     e24:	d1 83       	std	Z+1, r29	; 0x01
     e26:	c0 83       	st	Z, r28
     e28:	11 11       	cpse	r17, r1
     e2a:	f6 c0       	rjmp	.+492    	; 0x1018 <strtod+0x280>
     e2c:	60 e0       	ldi	r22, 0x00	; 0
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	80 e8       	ldi	r24, 0x80	; 128
     e32:	9f e7       	ldi	r25, 0x7F	; 127
     e34:	fa c0       	rjmp	.+500    	; 0x102a <strtod+0x292>
     e36:	43 e0       	ldi	r20, 0x03	; 3
     e38:	50 e0       	ldi	r21, 0x00	; 0
     e3a:	68 e6       	ldi	r22, 0x68	; 104
     e3c:	70 e0       	ldi	r23, 0x00	; 0
     e3e:	ce 01       	movw	r24, r28
     e40:	0e 94 fb 08 	call	0x11f6	; 0x11f6 <strncasecmp_P>
     e44:	89 2b       	or	r24, r25
     e46:	59 f4       	brne	.+22     	; 0xe5e <strtod+0xc6>
     e48:	c1 14       	cp	r12, r1
     e4a:	d1 04       	cpc	r13, r1
     e4c:	09 f4       	brne	.+2      	; 0xe50 <strtod+0xb8>
     e4e:	e9 c0       	rjmp	.+466    	; 0x1022 <strtod+0x28a>
     e50:	f2 e0       	ldi	r31, 0x02	; 2
     e52:	ef 0e       	add	r14, r31
     e54:	f1 1c       	adc	r15, r1
     e56:	f6 01       	movw	r30, r12
     e58:	f1 82       	std	Z+1, r15	; 0x01
     e5a:	e0 82       	st	Z, r14
     e5c:	e2 c0       	rjmp	.+452    	; 0x1022 <strtod+0x28a>
     e5e:	20 e0       	ldi	r18, 0x00	; 0
     e60:	30 e0       	ldi	r19, 0x00	; 0
     e62:	a9 01       	movw	r20, r18
     e64:	c0 e0       	ldi	r28, 0x00	; 0
     e66:	d0 e0       	ldi	r29, 0x00	; 0
     e68:	f7 01       	movw	r30, r14
     e6a:	80 ed       	ldi	r24, 0xD0	; 208
     e6c:	a8 2e       	mov	r10, r24
     e6e:	a0 0e       	add	r10, r16
     e70:	89 e0       	ldi	r24, 0x09	; 9
     e72:	8a 15       	cp	r24, r10
     e74:	30 f1       	brcs	.+76     	; 0xec2 <strtod+0x12a>
     e76:	91 2f       	mov	r25, r17
     e78:	92 60       	ori	r25, 0x02	; 2
     e7a:	b9 2e       	mov	r11, r25
     e7c:	81 2f       	mov	r24, r17
     e7e:	88 70       	andi	r24, 0x08	; 8
     e80:	12 ff       	sbrs	r17, 2
     e82:	04 c0       	rjmp	.+8      	; 0xe8c <strtod+0xf4>
     e84:	81 11       	cpse	r24, r1
     e86:	24 c0       	rjmp	.+72     	; 0xed0 <strtod+0x138>
     e88:	21 96       	adiw	r28, 0x01	; 1
     e8a:	22 c0       	rjmp	.+68     	; 0xed0 <strtod+0x138>
     e8c:	81 11       	cpse	r24, r1
     e8e:	21 97       	sbiw	r28, 0x01	; 1
     e90:	a5 e0       	ldi	r26, 0x05	; 5
     e92:	b0 e0       	ldi	r27, 0x00	; 0
     e94:	0e 94 4f 09 	call	0x129e	; 0x129e <__muluhisi3>
     e98:	dc 01       	movw	r26, r24
     e9a:	cb 01       	movw	r24, r22
     e9c:	88 0f       	add	r24, r24
     e9e:	99 1f       	adc	r25, r25
     ea0:	aa 1f       	adc	r26, r26
     ea2:	bb 1f       	adc	r27, r27
     ea4:	9c 01       	movw	r18, r24
     ea6:	ad 01       	movw	r20, r26
     ea8:	2a 0d       	add	r18, r10
     eaa:	31 1d       	adc	r19, r1
     eac:	41 1d       	adc	r20, r1
     eae:	51 1d       	adc	r21, r1
     eb0:	28 39       	cpi	r18, 0x98	; 152
     eb2:	89 e9       	ldi	r24, 0x99	; 153
     eb4:	38 07       	cpc	r19, r24
     eb6:	48 07       	cpc	r20, r24
     eb8:	89 e1       	ldi	r24, 0x19	; 25
     eba:	58 07       	cpc	r21, r24
     ebc:	48 f0       	brcs	.+18     	; 0xed0 <strtod+0x138>
     ebe:	16 60       	ori	r17, 0x06	; 6
     ec0:	06 c0       	rjmp	.+12     	; 0xece <strtod+0x136>
     ec2:	9e ef       	ldi	r25, 0xFE	; 254
     ec4:	a9 12       	cpse	r10, r25
     ec6:	0a c0       	rjmp	.+20     	; 0xedc <strtod+0x144>
     ec8:	13 fd       	sbrc	r17, 3
     eca:	40 c0       	rjmp	.+128    	; 0xf4c <strtod+0x1b4>
     ecc:	18 60       	ori	r17, 0x08	; 8
     ece:	b1 2e       	mov	r11, r17
     ed0:	8f ef       	ldi	r24, 0xFF	; 255
     ed2:	e8 1a       	sub	r14, r24
     ed4:	f8 0a       	sbc	r15, r24
     ed6:	00 81       	ld	r16, Z
     ed8:	1b 2d       	mov	r17, r11
     eda:	c6 cf       	rjmp	.-116    	; 0xe68 <strtod+0xd0>
     edc:	80 2f       	mov	r24, r16
     ede:	8f 7d       	andi	r24, 0xDF	; 223
     ee0:	85 34       	cpi	r24, 0x45	; 69
     ee2:	a1 f5       	brne	.+104    	; 0xf4c <strtod+0x1b4>
     ee4:	80 81       	ld	r24, Z
     ee6:	8d 32       	cpi	r24, 0x2D	; 45
     ee8:	11 f4       	brne	.+4      	; 0xeee <strtod+0x156>
     eea:	10 61       	ori	r17, 0x10	; 16
     eec:	06 c0       	rjmp	.+12     	; 0xefa <strtod+0x162>
     eee:	8b 32       	cpi	r24, 0x2B	; 43
     ef0:	21 f0       	breq	.+8      	; 0xefa <strtod+0x162>
     ef2:	31 96       	adiw	r30, 0x01	; 1
     ef4:	61 e0       	ldi	r22, 0x01	; 1
     ef6:	70 e0       	ldi	r23, 0x00	; 0
     ef8:	04 c0       	rjmp	.+8      	; 0xf02 <strtod+0x16a>
     efa:	81 81       	ldd	r24, Z+1	; 0x01
     efc:	32 96       	adiw	r30, 0x02	; 2
     efe:	62 e0       	ldi	r22, 0x02	; 2
     f00:	70 e0       	ldi	r23, 0x00	; 0
     f02:	80 53       	subi	r24, 0x30	; 48
     f04:	8a 30       	cpi	r24, 0x0A	; 10
     f06:	18 f0       	brcs	.+6      	; 0xf0e <strtod+0x176>
     f08:	e6 1b       	sub	r30, r22
     f0a:	f7 0b       	sbc	r31, r23
     f0c:	1f c0       	rjmp	.+62     	; 0xf4c <strtod+0x1b4>
     f0e:	60 e0       	ldi	r22, 0x00	; 0
     f10:	70 e0       	ldi	r23, 0x00	; 0
     f12:	60 38       	cpi	r22, 0x80	; 128
     f14:	9c e0       	ldi	r25, 0x0C	; 12
     f16:	79 07       	cpc	r23, r25
     f18:	5c f4       	brge	.+22     	; 0xf30 <strtod+0x198>
     f1a:	db 01       	movw	r26, r22
     f1c:	aa 0f       	add	r26, r26
     f1e:	bb 1f       	adc	r27, r27
     f20:	aa 0f       	add	r26, r26
     f22:	bb 1f       	adc	r27, r27
     f24:	6a 0f       	add	r22, r26
     f26:	7b 1f       	adc	r23, r27
     f28:	66 0f       	add	r22, r22
     f2a:	77 1f       	adc	r23, r23
     f2c:	68 0f       	add	r22, r24
     f2e:	71 1d       	adc	r23, r1
     f30:	31 96       	adiw	r30, 0x01	; 1
     f32:	df 01       	movw	r26, r30
     f34:	11 97       	sbiw	r26, 0x01	; 1
     f36:	8c 91       	ld	r24, X
     f38:	80 53       	subi	r24, 0x30	; 48
     f3a:	8a 30       	cpi	r24, 0x0A	; 10
     f3c:	50 f3       	brcs	.-44     	; 0xf12 <strtod+0x17a>
     f3e:	14 ff       	sbrs	r17, 4
     f40:	03 c0       	rjmp	.+6      	; 0xf48 <strtod+0x1b0>
     f42:	71 95       	neg	r23
     f44:	61 95       	neg	r22
     f46:	71 09       	sbc	r23, r1
     f48:	c6 0f       	add	r28, r22
     f4a:	d7 1f       	adc	r29, r23
     f4c:	11 ff       	sbrs	r17, 1
     f4e:	08 c0       	rjmp	.+16     	; 0xf60 <strtod+0x1c8>
     f50:	c1 14       	cp	r12, r1
     f52:	d1 04       	cpc	r13, r1
     f54:	29 f0       	breq	.+10     	; 0xf60 <strtod+0x1c8>
     f56:	cf 01       	movw	r24, r30
     f58:	01 97       	sbiw	r24, 0x01	; 1
     f5a:	f6 01       	movw	r30, r12
     f5c:	91 83       	std	Z+1, r25	; 0x01
     f5e:	80 83       	st	Z, r24
     f60:	ca 01       	movw	r24, r20
     f62:	b9 01       	movw	r22, r18
     f64:	0e 94 1f 04 	call	0x83e	; 0x83e <__floatunsisf>
     f68:	21 2f       	mov	r18, r17
     f6a:	23 70       	andi	r18, 0x03	; 3
     f6c:	23 30       	cpi	r18, 0x03	; 3
     f6e:	19 f0       	breq	.+6      	; 0xf76 <strtod+0x1de>
     f70:	4b 01       	movw	r8, r22
     f72:	5c 01       	movw	r10, r24
     f74:	06 c0       	rjmp	.+12     	; 0xf82 <strtod+0x1ea>
     f76:	4b 01       	movw	r8, r22
     f78:	5c 01       	movw	r10, r24
     f7a:	b7 fa       	bst	r11, 7
     f7c:	b0 94       	com	r11
     f7e:	b7 f8       	bld	r11, 7
     f80:	b0 94       	com	r11
     f82:	20 e0       	ldi	r18, 0x00	; 0
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	a9 01       	movw	r20, r18
     f88:	c5 01       	movw	r24, r10
     f8a:	b4 01       	movw	r22, r8
     f8c:	0e 94 23 09 	call	0x1246	; 0x1246 <__cmpsf2>
     f90:	88 23       	and	r24, r24
     f92:	09 f4       	brne	.+2      	; 0xf96 <strtod+0x1fe>
     f94:	3e c0       	rjmp	.+124    	; 0x1012 <strtod+0x27a>
     f96:	d7 ff       	sbrs	r29, 7
     f98:	06 c0       	rjmp	.+12     	; 0xfa6 <strtod+0x20e>
     f9a:	d1 95       	neg	r29
     f9c:	c1 95       	neg	r28
     f9e:	d1 09       	sbc	r29, r1
     fa0:	07 e8       	ldi	r16, 0x87	; 135
     fa2:	10 e0       	ldi	r17, 0x00	; 0
     fa4:	02 c0       	rjmp	.+4      	; 0xfaa <strtod+0x212>
     fa6:	0f e9       	ldi	r16, 0x9F	; 159
     fa8:	10 e0       	ldi	r17, 0x00	; 0
     faa:	68 01       	movw	r12, r16
     fac:	f8 e1       	ldi	r31, 0x18	; 24
     fae:	cf 1a       	sub	r12, r31
     fb0:	d1 08       	sbc	r13, r1
     fb2:	90 e2       	ldi	r25, 0x20	; 32
     fb4:	e9 2e       	mov	r14, r25
     fb6:	f1 2c       	mov	r15, r1
     fb8:	ce 15       	cp	r28, r14
     fba:	df 05       	cpc	r29, r15
     fbc:	74 f0       	brlt	.+28     	; 0xfda <strtod+0x242>
     fbe:	f8 01       	movw	r30, r16
     fc0:	25 91       	lpm	r18, Z+
     fc2:	35 91       	lpm	r19, Z+
     fc4:	45 91       	lpm	r20, Z+
     fc6:	54 91       	lpm	r21, Z
     fc8:	c5 01       	movw	r24, r10
     fca:	b4 01       	movw	r22, r8
     fcc:	0e 94 85 04 	call	0x90a	; 0x90a <__mulsf3>
     fd0:	4b 01       	movw	r8, r22
     fd2:	5c 01       	movw	r10, r24
     fd4:	ce 19       	sub	r28, r14
     fd6:	df 09       	sbc	r29, r15
     fd8:	ef cf       	rjmp	.-34     	; 0xfb8 <strtod+0x220>
     fda:	04 50       	subi	r16, 0x04	; 4
     fdc:	11 09       	sbc	r17, r1
     fde:	f5 94       	asr	r15
     fe0:	e7 94       	ror	r14
     fe2:	0c 15       	cp	r16, r12
     fe4:	1d 05       	cpc	r17, r13
     fe6:	41 f7       	brne	.-48     	; 0xfb8 <strtod+0x220>
     fe8:	8a 2d       	mov	r24, r10
     fea:	88 0f       	add	r24, r24
     fec:	8b 2d       	mov	r24, r11
     fee:	88 1f       	adc	r24, r24
     ff0:	8f 3f       	cpi	r24, 0xFF	; 255
     ff2:	49 f0       	breq	.+18     	; 0x1006 <strtod+0x26e>
     ff4:	20 e0       	ldi	r18, 0x00	; 0
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	a9 01       	movw	r20, r18
     ffa:	c5 01       	movw	r24, r10
     ffc:	b4 01       	movw	r22, r8
     ffe:	0e 94 23 09 	call	0x1246	; 0x1246 <__cmpsf2>
    1002:	81 11       	cpse	r24, r1
    1004:	06 c0       	rjmp	.+12     	; 0x1012 <strtod+0x27a>
    1006:	82 e2       	ldi	r24, 0x22	; 34
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	90 93 d6 01 	sts	0x01D6, r25	; 0x8001d6 <errno+0x1>
    100e:	80 93 d5 01 	sts	0x01D5, r24	; 0x8001d5 <errno>
    1012:	c5 01       	movw	r24, r10
    1014:	b4 01       	movw	r22, r8
    1016:	09 c0       	rjmp	.+18     	; 0x102a <strtod+0x292>
    1018:	60 e0       	ldi	r22, 0x00	; 0
    101a:	70 e0       	ldi	r23, 0x00	; 0
    101c:	80 e8       	ldi	r24, 0x80	; 128
    101e:	9f ef       	ldi	r25, 0xFF	; 255
    1020:	04 c0       	rjmp	.+8      	; 0x102a <strtod+0x292>
    1022:	60 e0       	ldi	r22, 0x00	; 0
    1024:	70 e0       	ldi	r23, 0x00	; 0
    1026:	80 ec       	ldi	r24, 0xC0	; 192
    1028:	9f e7       	ldi	r25, 0x7F	; 127
    102a:	cd b7       	in	r28, 0x3d	; 61
    102c:	de b7       	in	r29, 0x3e	; 62
    102e:	ec e0       	ldi	r30, 0x0C	; 12
    1030:	0c 94 7c 09 	jmp	0x12f8	; 0x12f8 <__epilogue_restores__+0xc>

00001034 <__ftoa_engine>:
    1034:	28 30       	cpi	r18, 0x08	; 8
    1036:	08 f0       	brcs	.+2      	; 0x103a <__ftoa_engine+0x6>
    1038:	27 e0       	ldi	r18, 0x07	; 7
    103a:	33 27       	eor	r19, r19
    103c:	da 01       	movw	r26, r20
    103e:	99 0f       	add	r25, r25
    1040:	31 1d       	adc	r19, r1
    1042:	87 fd       	sbrc	r24, 7
    1044:	91 60       	ori	r25, 0x01	; 1
    1046:	00 96       	adiw	r24, 0x00	; 0
    1048:	61 05       	cpc	r22, r1
    104a:	71 05       	cpc	r23, r1
    104c:	39 f4       	brne	.+14     	; 0x105c <__ftoa_engine+0x28>
    104e:	32 60       	ori	r19, 0x02	; 2
    1050:	2e 5f       	subi	r18, 0xFE	; 254
    1052:	3d 93       	st	X+, r19
    1054:	30 e3       	ldi	r19, 0x30	; 48
    1056:	2a 95       	dec	r18
    1058:	e1 f7       	brne	.-8      	; 0x1052 <__ftoa_engine+0x1e>
    105a:	08 95       	ret
    105c:	9f 3f       	cpi	r25, 0xFF	; 255
    105e:	30 f0       	brcs	.+12     	; 0x106c <__ftoa_engine+0x38>
    1060:	80 38       	cpi	r24, 0x80	; 128
    1062:	71 05       	cpc	r23, r1
    1064:	61 05       	cpc	r22, r1
    1066:	09 f0       	breq	.+2      	; 0x106a <__ftoa_engine+0x36>
    1068:	3c 5f       	subi	r19, 0xFC	; 252
    106a:	3c 5f       	subi	r19, 0xFC	; 252
    106c:	3d 93       	st	X+, r19
    106e:	91 30       	cpi	r25, 0x01	; 1
    1070:	08 f0       	brcs	.+2      	; 0x1074 <__ftoa_engine+0x40>
    1072:	80 68       	ori	r24, 0x80	; 128
    1074:	91 1d       	adc	r25, r1
    1076:	df 93       	push	r29
    1078:	cf 93       	push	r28
    107a:	1f 93       	push	r17
    107c:	0f 93       	push	r16
    107e:	ff 92       	push	r15
    1080:	ef 92       	push	r14
    1082:	19 2f       	mov	r17, r25
    1084:	98 7f       	andi	r25, 0xF8	; 248
    1086:	96 95       	lsr	r25
    1088:	e9 2f       	mov	r30, r25
    108a:	96 95       	lsr	r25
    108c:	96 95       	lsr	r25
    108e:	e9 0f       	add	r30, r25
    1090:	ff 27       	eor	r31, r31
    1092:	e3 50       	subi	r30, 0x03	; 3
    1094:	ff 4f       	sbci	r31, 0xFF	; 255
    1096:	99 27       	eor	r25, r25
    1098:	33 27       	eor	r19, r19
    109a:	ee 24       	eor	r14, r14
    109c:	ff 24       	eor	r15, r15
    109e:	a7 01       	movw	r20, r14
    10a0:	e7 01       	movw	r28, r14
    10a2:	05 90       	lpm	r0, Z+
    10a4:	08 94       	sec
    10a6:	07 94       	ror	r0
    10a8:	28 f4       	brcc	.+10     	; 0x10b4 <__ftoa_engine+0x80>
    10aa:	36 0f       	add	r19, r22
    10ac:	e7 1e       	adc	r14, r23
    10ae:	f8 1e       	adc	r15, r24
    10b0:	49 1f       	adc	r20, r25
    10b2:	51 1d       	adc	r21, r1
    10b4:	66 0f       	add	r22, r22
    10b6:	77 1f       	adc	r23, r23
    10b8:	88 1f       	adc	r24, r24
    10ba:	99 1f       	adc	r25, r25
    10bc:	06 94       	lsr	r0
    10be:	a1 f7       	brne	.-24     	; 0x10a8 <__ftoa_engine+0x74>
    10c0:	05 90       	lpm	r0, Z+
    10c2:	07 94       	ror	r0
    10c4:	28 f4       	brcc	.+10     	; 0x10d0 <__ftoa_engine+0x9c>
    10c6:	e7 0e       	add	r14, r23
    10c8:	f8 1e       	adc	r15, r24
    10ca:	49 1f       	adc	r20, r25
    10cc:	56 1f       	adc	r21, r22
    10ce:	c1 1d       	adc	r28, r1
    10d0:	77 0f       	add	r23, r23
    10d2:	88 1f       	adc	r24, r24
    10d4:	99 1f       	adc	r25, r25
    10d6:	66 1f       	adc	r22, r22
    10d8:	06 94       	lsr	r0
    10da:	a1 f7       	brne	.-24     	; 0x10c4 <__ftoa_engine+0x90>
    10dc:	05 90       	lpm	r0, Z+
    10de:	07 94       	ror	r0
    10e0:	28 f4       	brcc	.+10     	; 0x10ec <__ftoa_engine+0xb8>
    10e2:	f8 0e       	add	r15, r24
    10e4:	49 1f       	adc	r20, r25
    10e6:	56 1f       	adc	r21, r22
    10e8:	c7 1f       	adc	r28, r23
    10ea:	d1 1d       	adc	r29, r1
    10ec:	88 0f       	add	r24, r24
    10ee:	99 1f       	adc	r25, r25
    10f0:	66 1f       	adc	r22, r22
    10f2:	77 1f       	adc	r23, r23
    10f4:	06 94       	lsr	r0
    10f6:	a1 f7       	brne	.-24     	; 0x10e0 <__ftoa_engine+0xac>
    10f8:	05 90       	lpm	r0, Z+
    10fa:	07 94       	ror	r0
    10fc:	20 f4       	brcc	.+8      	; 0x1106 <__ftoa_engine+0xd2>
    10fe:	49 0f       	add	r20, r25
    1100:	56 1f       	adc	r21, r22
    1102:	c7 1f       	adc	r28, r23
    1104:	d8 1f       	adc	r29, r24
    1106:	99 0f       	add	r25, r25
    1108:	66 1f       	adc	r22, r22
    110a:	77 1f       	adc	r23, r23
    110c:	88 1f       	adc	r24, r24
    110e:	06 94       	lsr	r0
    1110:	a9 f7       	brne	.-22     	; 0x10fc <__ftoa_engine+0xc8>
    1112:	84 91       	lpm	r24, Z
    1114:	10 95       	com	r17
    1116:	17 70       	andi	r17, 0x07	; 7
    1118:	41 f0       	breq	.+16     	; 0x112a <__ftoa_engine+0xf6>
    111a:	d6 95       	lsr	r29
    111c:	c7 95       	ror	r28
    111e:	57 95       	ror	r21
    1120:	47 95       	ror	r20
    1122:	f7 94       	ror	r15
    1124:	e7 94       	ror	r14
    1126:	1a 95       	dec	r17
    1128:	c1 f7       	brne	.-16     	; 0x111a <__ftoa_engine+0xe6>
    112a:	e3 ea       	ldi	r30, 0xA3	; 163
    112c:	f0 e0       	ldi	r31, 0x00	; 0
    112e:	68 94       	set
    1130:	15 90       	lpm	r1, Z+
    1132:	15 91       	lpm	r17, Z+
    1134:	35 91       	lpm	r19, Z+
    1136:	65 91       	lpm	r22, Z+
    1138:	95 91       	lpm	r25, Z+
    113a:	05 90       	lpm	r0, Z+
    113c:	7f e2       	ldi	r23, 0x2F	; 47
    113e:	73 95       	inc	r23
    1140:	e1 18       	sub	r14, r1
    1142:	f1 0a       	sbc	r15, r17
    1144:	43 0b       	sbc	r20, r19
    1146:	56 0b       	sbc	r21, r22
    1148:	c9 0b       	sbc	r28, r25
    114a:	d0 09       	sbc	r29, r0
    114c:	c0 f7       	brcc	.-16     	; 0x113e <__ftoa_engine+0x10a>
    114e:	e1 0c       	add	r14, r1
    1150:	f1 1e       	adc	r15, r17
    1152:	43 1f       	adc	r20, r19
    1154:	56 1f       	adc	r21, r22
    1156:	c9 1f       	adc	r28, r25
    1158:	d0 1d       	adc	r29, r0
    115a:	7e f4       	brtc	.+30     	; 0x117a <__ftoa_engine+0x146>
    115c:	70 33       	cpi	r23, 0x30	; 48
    115e:	11 f4       	brne	.+4      	; 0x1164 <__ftoa_engine+0x130>
    1160:	8a 95       	dec	r24
    1162:	e6 cf       	rjmp	.-52     	; 0x1130 <__ftoa_engine+0xfc>
    1164:	e8 94       	clt
    1166:	01 50       	subi	r16, 0x01	; 1
    1168:	30 f0       	brcs	.+12     	; 0x1176 <__ftoa_engine+0x142>
    116a:	08 0f       	add	r16, r24
    116c:	0a f4       	brpl	.+2      	; 0x1170 <__ftoa_engine+0x13c>
    116e:	00 27       	eor	r16, r16
    1170:	02 17       	cp	r16, r18
    1172:	08 f4       	brcc	.+2      	; 0x1176 <__ftoa_engine+0x142>
    1174:	20 2f       	mov	r18, r16
    1176:	23 95       	inc	r18
    1178:	02 2f       	mov	r16, r18
    117a:	7a 33       	cpi	r23, 0x3A	; 58
    117c:	28 f0       	brcs	.+10     	; 0x1188 <__ftoa_engine+0x154>
    117e:	79 e3       	ldi	r23, 0x39	; 57
    1180:	7d 93       	st	X+, r23
    1182:	2a 95       	dec	r18
    1184:	e9 f7       	brne	.-6      	; 0x1180 <__ftoa_engine+0x14c>
    1186:	10 c0       	rjmp	.+32     	; 0x11a8 <__ftoa_engine+0x174>
    1188:	7d 93       	st	X+, r23
    118a:	2a 95       	dec	r18
    118c:	89 f6       	brne	.-94     	; 0x1130 <__ftoa_engine+0xfc>
    118e:	06 94       	lsr	r0
    1190:	97 95       	ror	r25
    1192:	67 95       	ror	r22
    1194:	37 95       	ror	r19
    1196:	17 95       	ror	r17
    1198:	17 94       	ror	r1
    119a:	e1 18       	sub	r14, r1
    119c:	f1 0a       	sbc	r15, r17
    119e:	43 0b       	sbc	r20, r19
    11a0:	56 0b       	sbc	r21, r22
    11a2:	c9 0b       	sbc	r28, r25
    11a4:	d0 09       	sbc	r29, r0
    11a6:	98 f0       	brcs	.+38     	; 0x11ce <__ftoa_engine+0x19a>
    11a8:	23 95       	inc	r18
    11aa:	7e 91       	ld	r23, -X
    11ac:	73 95       	inc	r23
    11ae:	7a 33       	cpi	r23, 0x3A	; 58
    11b0:	08 f0       	brcs	.+2      	; 0x11b4 <__ftoa_engine+0x180>
    11b2:	70 e3       	ldi	r23, 0x30	; 48
    11b4:	7c 93       	st	X, r23
    11b6:	20 13       	cpse	r18, r16
    11b8:	b8 f7       	brcc	.-18     	; 0x11a8 <__ftoa_engine+0x174>
    11ba:	7e 91       	ld	r23, -X
    11bc:	70 61       	ori	r23, 0x10	; 16
    11be:	7d 93       	st	X+, r23
    11c0:	30 f0       	brcs	.+12     	; 0x11ce <__ftoa_engine+0x19a>
    11c2:	83 95       	inc	r24
    11c4:	71 e3       	ldi	r23, 0x31	; 49
    11c6:	7d 93       	st	X+, r23
    11c8:	70 e3       	ldi	r23, 0x30	; 48
    11ca:	2a 95       	dec	r18
    11cc:	e1 f7       	brne	.-8      	; 0x11c6 <__ftoa_engine+0x192>
    11ce:	11 24       	eor	r1, r1
    11d0:	ef 90       	pop	r14
    11d2:	ff 90       	pop	r15
    11d4:	0f 91       	pop	r16
    11d6:	1f 91       	pop	r17
    11d8:	cf 91       	pop	r28
    11da:	df 91       	pop	r29
    11dc:	99 27       	eor	r25, r25
    11de:	87 fd       	sbrc	r24, 7
    11e0:	90 95       	com	r25
    11e2:	08 95       	ret

000011e4 <isspace>:
    11e4:	91 11       	cpse	r25, r1
    11e6:	0c 94 4c 09 	jmp	0x1298	; 0x1298 <__ctype_isfalse>
    11ea:	80 32       	cpi	r24, 0x20	; 32
    11ec:	19 f0       	breq	.+6      	; 0x11f4 <isspace+0x10>
    11ee:	89 50       	subi	r24, 0x09	; 9
    11f0:	85 50       	subi	r24, 0x05	; 5
    11f2:	c8 f7       	brcc	.-14     	; 0x11e6 <isspace+0x2>
    11f4:	08 95       	ret

000011f6 <strncasecmp_P>:
    11f6:	fb 01       	movw	r30, r22
    11f8:	dc 01       	movw	r26, r24
    11fa:	41 50       	subi	r20, 0x01	; 1
    11fc:	50 40       	sbci	r21, 0x00	; 0
    11fe:	88 f0       	brcs	.+34     	; 0x1222 <strncasecmp_P+0x2c>
    1200:	8d 91       	ld	r24, X+
    1202:	81 34       	cpi	r24, 0x41	; 65
    1204:	1c f0       	brlt	.+6      	; 0x120c <strncasecmp_P+0x16>
    1206:	8b 35       	cpi	r24, 0x5B	; 91
    1208:	0c f4       	brge	.+2      	; 0x120c <strncasecmp_P+0x16>
    120a:	80 5e       	subi	r24, 0xE0	; 224
    120c:	65 91       	lpm	r22, Z+
    120e:	61 34       	cpi	r22, 0x41	; 65
    1210:	1c f0       	brlt	.+6      	; 0x1218 <strncasecmp_P+0x22>
    1212:	6b 35       	cpi	r22, 0x5B	; 91
    1214:	0c f4       	brge	.+2      	; 0x1218 <strncasecmp_P+0x22>
    1216:	60 5e       	subi	r22, 0xE0	; 224
    1218:	86 1b       	sub	r24, r22
    121a:	61 11       	cpse	r22, r1
    121c:	71 f3       	breq	.-36     	; 0x11fa <strncasecmp_P+0x4>
    121e:	99 0b       	sbc	r25, r25
    1220:	08 95       	ret
    1222:	88 1b       	sub	r24, r24
    1224:	fc cf       	rjmp	.-8      	; 0x121e <strncasecmp_P+0x28>

00001226 <strrev>:
    1226:	dc 01       	movw	r26, r24
    1228:	fc 01       	movw	r30, r24
    122a:	67 2f       	mov	r22, r23
    122c:	71 91       	ld	r23, Z+
    122e:	77 23       	and	r23, r23
    1230:	e1 f7       	brne	.-8      	; 0x122a <strrev+0x4>
    1232:	32 97       	sbiw	r30, 0x02	; 2
    1234:	04 c0       	rjmp	.+8      	; 0x123e <strrev+0x18>
    1236:	7c 91       	ld	r23, X
    1238:	6d 93       	st	X+, r22
    123a:	70 83       	st	Z, r23
    123c:	62 91       	ld	r22, -Z
    123e:	ae 17       	cp	r26, r30
    1240:	bf 07       	cpc	r27, r31
    1242:	c8 f3       	brcs	.-14     	; 0x1236 <strrev+0x10>
    1244:	08 95       	ret

00001246 <__cmpsf2>:
    1246:	0e 94 28 09 	call	0x1250	; 0x1250 <__fp_cmp>
    124a:	08 f4       	brcc	.+2      	; 0x124e <__cmpsf2+0x8>
    124c:	81 e0       	ldi	r24, 0x01	; 1
    124e:	08 95       	ret

00001250 <__fp_cmp>:
    1250:	99 0f       	add	r25, r25
    1252:	00 08       	sbc	r0, r0
    1254:	55 0f       	add	r21, r21
    1256:	aa 0b       	sbc	r26, r26
    1258:	e0 e8       	ldi	r30, 0x80	; 128
    125a:	fe ef       	ldi	r31, 0xFE	; 254
    125c:	16 16       	cp	r1, r22
    125e:	17 06       	cpc	r1, r23
    1260:	e8 07       	cpc	r30, r24
    1262:	f9 07       	cpc	r31, r25
    1264:	c0 f0       	brcs	.+48     	; 0x1296 <__fp_cmp+0x46>
    1266:	12 16       	cp	r1, r18
    1268:	13 06       	cpc	r1, r19
    126a:	e4 07       	cpc	r30, r20
    126c:	f5 07       	cpc	r31, r21
    126e:	98 f0       	brcs	.+38     	; 0x1296 <__fp_cmp+0x46>
    1270:	62 1b       	sub	r22, r18
    1272:	73 0b       	sbc	r23, r19
    1274:	84 0b       	sbc	r24, r20
    1276:	95 0b       	sbc	r25, r21
    1278:	39 f4       	brne	.+14     	; 0x1288 <__fp_cmp+0x38>
    127a:	0a 26       	eor	r0, r26
    127c:	61 f0       	breq	.+24     	; 0x1296 <__fp_cmp+0x46>
    127e:	23 2b       	or	r18, r19
    1280:	24 2b       	or	r18, r20
    1282:	25 2b       	or	r18, r21
    1284:	21 f4       	brne	.+8      	; 0x128e <__fp_cmp+0x3e>
    1286:	08 95       	ret
    1288:	0a 26       	eor	r0, r26
    128a:	09 f4       	brne	.+2      	; 0x128e <__fp_cmp+0x3e>
    128c:	a1 40       	sbci	r26, 0x01	; 1
    128e:	a6 95       	lsr	r26
    1290:	8f ef       	ldi	r24, 0xFF	; 255
    1292:	81 1d       	adc	r24, r1
    1294:	81 1d       	adc	r24, r1
    1296:	08 95       	ret

00001298 <__ctype_isfalse>:
    1298:	99 27       	eor	r25, r25
    129a:	88 27       	eor	r24, r24

0000129c <__ctype_istrue>:
    129c:	08 95       	ret

0000129e <__muluhisi3>:
    129e:	0e 94 91 09 	call	0x1322	; 0x1322 <__umulhisi3>
    12a2:	a5 9f       	mul	r26, r21
    12a4:	90 0d       	add	r25, r0
    12a6:	b4 9f       	mul	r27, r20
    12a8:	90 0d       	add	r25, r0
    12aa:	a4 9f       	mul	r26, r20
    12ac:	80 0d       	add	r24, r0
    12ae:	91 1d       	adc	r25, r1
    12b0:	11 24       	eor	r1, r1
    12b2:	08 95       	ret

000012b4 <__prologue_saves__>:
    12b4:	2f 92       	push	r2
    12b6:	3f 92       	push	r3
    12b8:	4f 92       	push	r4
    12ba:	5f 92       	push	r5
    12bc:	6f 92       	push	r6
    12be:	7f 92       	push	r7
    12c0:	8f 92       	push	r8
    12c2:	9f 92       	push	r9
    12c4:	af 92       	push	r10
    12c6:	bf 92       	push	r11
    12c8:	cf 92       	push	r12
    12ca:	df 92       	push	r13
    12cc:	ef 92       	push	r14
    12ce:	ff 92       	push	r15
    12d0:	0f 93       	push	r16
    12d2:	1f 93       	push	r17
    12d4:	cf 93       	push	r28
    12d6:	df 93       	push	r29
    12d8:	cd b7       	in	r28, 0x3d	; 61
    12da:	de b7       	in	r29, 0x3e	; 62
    12dc:	ca 1b       	sub	r28, r26
    12de:	db 0b       	sbc	r29, r27
    12e0:	0f b6       	in	r0, 0x3f	; 63
    12e2:	f8 94       	cli
    12e4:	de bf       	out	0x3e, r29	; 62
    12e6:	0f be       	out	0x3f, r0	; 63
    12e8:	cd bf       	out	0x3d, r28	; 61
    12ea:	09 94       	ijmp

000012ec <__epilogue_restores__>:
    12ec:	2a 88       	ldd	r2, Y+18	; 0x12
    12ee:	39 88       	ldd	r3, Y+17	; 0x11
    12f0:	48 88       	ldd	r4, Y+16	; 0x10
    12f2:	5f 84       	ldd	r5, Y+15	; 0x0f
    12f4:	6e 84       	ldd	r6, Y+14	; 0x0e
    12f6:	7d 84       	ldd	r7, Y+13	; 0x0d
    12f8:	8c 84       	ldd	r8, Y+12	; 0x0c
    12fa:	9b 84       	ldd	r9, Y+11	; 0x0b
    12fc:	aa 84       	ldd	r10, Y+10	; 0x0a
    12fe:	b9 84       	ldd	r11, Y+9	; 0x09
    1300:	c8 84       	ldd	r12, Y+8	; 0x08
    1302:	df 80       	ldd	r13, Y+7	; 0x07
    1304:	ee 80       	ldd	r14, Y+6	; 0x06
    1306:	fd 80       	ldd	r15, Y+5	; 0x05
    1308:	0c 81       	ldd	r16, Y+4	; 0x04
    130a:	1b 81       	ldd	r17, Y+3	; 0x03
    130c:	aa 81       	ldd	r26, Y+2	; 0x02
    130e:	b9 81       	ldd	r27, Y+1	; 0x01
    1310:	ce 0f       	add	r28, r30
    1312:	d1 1d       	adc	r29, r1
    1314:	0f b6       	in	r0, 0x3f	; 63
    1316:	f8 94       	cli
    1318:	de bf       	out	0x3e, r29	; 62
    131a:	0f be       	out	0x3f, r0	; 63
    131c:	cd bf       	out	0x3d, r28	; 61
    131e:	ed 01       	movw	r28, r26
    1320:	08 95       	ret

00001322 <__umulhisi3>:
    1322:	a2 9f       	mul	r26, r18
    1324:	b0 01       	movw	r22, r0
    1326:	b3 9f       	mul	r27, r19
    1328:	c0 01       	movw	r24, r0
    132a:	a3 9f       	mul	r26, r19
    132c:	70 0d       	add	r23, r0
    132e:	81 1d       	adc	r24, r1
    1330:	11 24       	eor	r1, r1
    1332:	91 1d       	adc	r25, r1
    1334:	b2 9f       	mul	r27, r18
    1336:	70 0d       	add	r23, r0
    1338:	81 1d       	adc	r24, r1
    133a:	11 24       	eor	r1, r1
    133c:	91 1d       	adc	r25, r1
    133e:	08 95       	ret

00001340 <_exit>:
    1340:	f8 94       	cli

00001342 <__stop_program>:
    1342:	ff cf       	rjmp	.-2      	; 0x1342 <__stop_program>
